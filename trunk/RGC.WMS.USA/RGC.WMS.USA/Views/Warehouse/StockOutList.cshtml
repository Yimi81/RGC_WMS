
@{
    ViewData["Title"] = "出库列表";
}

<body class="plr20">
    <div id="stockoutlist">
        <!-- 标题和地址 -->
        <el-row>
            <el-col :span="24" class="breadcrumb-container">
                <el-breadcrumb separator="/">
                    <el-breadcrumb-item><strong>库存管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>出库列表</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>
        <article class="administration-tenant-container">
            <!--搜索-->
            <el-col :span="24" class="toolbar">
                <el-form :inline="true" size="small" :model="filters" v-on:submit.native.prevent>
                    <el-form-item>
                        <el-select v-model="filters.searchType"
                                   placeholder="请选择检索类目"
                                   style="width:75px">
                            <el-option v-for="item in searchTypeList"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item>
                        <el-input placeholder="搜索" v-model="filters.searchKey"
                                  v-on:keyup.enter.native="getStockOutList()" clearable></el-input>
                    </el-form-item>
                    <el-form-item label="仓库">
                        <el-select v-model="filters.warehouseId"
                                   placeholder="请选择仓库"
                                   style="width:100px">
                            <el-option v-for="item in warehouseList"
                                       :key="item.id"
                                       :label="item.number"
                                       :value="item.id">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="出库状态">
                        <el-select v-model="filters.status"
                                   placeholder="请选择状态"
                                   style="width:100px">
                            <el-option v-for="item in statusList"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="是否删除">
                        <el-select v-model="filters.isDeleted"
                                   placeholder="请选择状态"
                                   style="width:100px">
                            <el-option v-for="item in deletedList"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item>
                        <el-button v-on:click="search" icon="el-icon-search">搜索</el-button>
                    </el-form-item>
                    <el-form-item>
                        <el-dropdown trigger="click" size="small">
                            <el-button type="primary">
                                <i class="el-icon-plus"></i>
                                添加出库单
                            </el-button>
                            <el-dropdown-menu slot="dropdown">
                                <el-dropdown-item>
                                    <div v-on:click="addMoving">调拔出库</div>
                                </el-dropdown-item>
                            </el-dropdown-menu>
                        </el-dropdown>
                    </el-form-item>
                </el-form>
            </el-col>
            <el-table class="data-table" v-loading="listLoading" :data="stockOutList" :fit="true" border size="small">
                <el-table-column type="expand">
                    <template slot-scope="scope">
                        <el-table class="data-table" :data="scope.row.detail" :fit="true" border size="small">
                            <el-table-column min-width="60" prop="planOutQty" label="计划数量" align="center">
                                <template slot-scope="scopeDetail">
                                    <i>{{scopeDetail.row.planOutQty}}</i>
                                </template>
                            </el-table-column>
                            <el-table-column min-width="100" prop="factoryModel" label="出库型号" align="center">
                                <template slot-scope="scopeDetail">
                                    <i>{{scopeDetail.row.sku.factoryModel}}</i>
                                </template>
                            </el-table-column>
                            <el-table-column min-width="100" prop="batchNo" label="出库批次" align="center">
                                <template slot-scope="scopeDetail">
                                    <i>{{scopeDetail.row.skuCostBatch.batchNo}}</i>
                                </template>
                            </el-table-column>
                            <el-table-column min-width="100" prop="actOutQty" label="出库数量" align="center">
                                <template slot-scope="scopeDetail">
                                    <i>{{scopeDetail.row.actOutQty}}</i>
                                </template>
                            </el-table-column>
                            <el-table-column min-width="150" label="操作">
                                <template slot-scope="scope">

                                </template>
                            </el-table-column>
                        </el-table>
                    </template>
                </el-table-column>
                <el-table-column min-width="40" prop="stockOutNum" label="出库编号" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.stockOutNum}}</i>
                    </template>
                </el-table-column>
                <el-table-column min-width="40" prop="orderNum" label="出库订单" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.orderNum}}</i>
                    </template>
                </el-table-column>
                <el-table-column prop="stockOutType" min-width="100" align="center" label="状态">
                    <template slot-scope="scope">
                        <el-tag size="small" v-if="scope.row.stockOutType == 1" type="success">订单出库</el-tag>
                        <el-tag size="small" v-if="scope.row.stockOutType == 2" type="info">调拨出库</el-tag>
                        <el-tag size="small" v-if="scope.row.stockOutType == 3" type="warning">退货出库</el-tag>
                        <el-tag size="small" v-if="scope.row.stockOutType == 4" type="info">其它出库</el-tag>
                    </template>
                </el-table-column>
                <el-table-column min-width="100" prop="number" label="出库仓库" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.warehouse.number}}</i>
                    </template>
                </el-table-column>
                <el-table-column min-width="200" prop="contractNo" label="发货合同" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.packingList.contractNo}}</i>
                    </template>
                </el-table-column>
                <el-table-column prop="stockOutStatus" min-width="100" align="center" label="状态">
                    <template slot-scope="scope">
                        <el-tag size="small" v-if="scope.row.stockOutStatus == 1" type="warning">未出库</el-tag>
                        <el-tag size="small" v-if="scope.row.stockOutStatus == 2" type="info">出库中</el-tag>
                        <el-tag size="small" v-if="scope.row.stockOutStatus == 3" type="success">已出库</el-tag>
                    </template>
                </el-table-column>
                <el-table-column width="150" prop="lastModificationTimeString" label="上次修改时间" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.lastModificationTimeString}}</i>
                    </template>
                </el-table-column>
                <el-table-column min-width="60" prop="creatorUser" label="创建人" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.creatorUser}}</i>
                    </template>
                </el-table-column>

                <el-table-column width="100" label="操作" align="center">
                    <template slot-scope="scope">
                        <el-dropdown trigger="click">
                            <el-button type="primary" size="mini" class="mb5">
                                操作
                                <i class="el-icon-caret-bottom el-icon--right"></i>
                            </el-button>
                            <el-dropdown-menu slot="dropdown">
                                <el-dropdown-item v-if="!scope.row.isDeleted">
                                    <div v-on:click="editMoving(scope.row)">修 改</div>
                                </el-dropdown-item>
                                <el-dropdown-item v-if="!scope.row.isDeleted">
                                    <div v-on:click="del(scope.$index, scope.row)">删 除</div>
                                </el-dropdown-item>
                                <el-dropdown-item v-if="scope.row.isDeleted">
                                    <div v-on:click="rec(scope.$index, scope.row)">恢 复</div>
                                </el-dropdown-item>
                                <el-dropdown-item>
                                    <div v-on:click="detail(scope.row)">查看</div>
                                </el-dropdown-item>
                            </el-dropdown-menu>
                        </el-dropdown>
                        <el-dropdown trigger="click" size="small">
                            <el-button type="warning" plain size="mini" class="mb5 ml10">
                                状态维护
                                <i class="el-icon-caret-bottom el-icon--right"></i>
                            </el-button>
                            <el-dropdown-menu slot="dropdown">
                                <el-dropdown-item v-if="scope.row.stockOutStatus != 1">
                                    <div v-on:click="update_status(scope.$index, scope.row, 1)">未出库</div>
                                </el-dropdown-item>
                                <el-dropdown-item v-if="scope.row.stockOutStatus != 2">
                                    <div v-on:click="update_status(scope.$index, scope.row, 2)">出库中</div>
                                </el-dropdown-item>
                                <el-dropdown-item v-if="scope.row.stockOutStatus != 3">
                                    <div v-on:click="update_status(scope.$index, scope.row, 3)">已出库</div>
                                </el-dropdown-item>
                            </el-dropdown-menu>
                        </el-dropdown>
                    </template>
                </el-table-column>
            </el-table>
            <el-col :span="24" class="toolbar">
                <el-pagination v-on:size-change="handleSizeChange" v-on:current-change="handleCurrentChange" :current-page="page" :page-sizes="[10,20,30,40,50]" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total" style="float:right;">
                </el-pagination>
            </el-col>
        </article>
    </div>
    <script>
        var Main = {
            data() {
                return {
                    listLoading: false,
                    loading: false,
                    stockOutList: [],
                    warehouseList : [],
                    searchTypeList: [{
                        value: 'skuName',
                        label: '产品'
                    }, {
                        value: 'batchNo',
                        label: '批次'
                    }, {
                        value: 'factoryModel',
                        label: '型号'
                    }],
                    statusList: [{
                        value: 0,
                        label: '全部显示'
                    }, {
                        value: 1,
                        label: '未出库'
                    }, {
                        value: 2,
                        label: '出库中'
                    }, {
                        value: 3,
                        label: '已出库'
                    }],
                    deletedList: [{
                        value: 0,
                        label: '全部显示'
                    }, {
                        value: 1,
                        label: '未删除'
                    }, {
                        value: 2,
                        label: '已删除'
                    }],
                    filters: {
                        searchType: 'factoryModel',
                        searchKey: '',
                        warehouseId: 0,
                        status: 0,
                        isDeleted: 0
                    },
                    total: 30,
                    page: 1,
                    pageSize: 10
                }
            },
            created() {
                this.getWarehouseSimpleList(this.getStockOutList);
            },
            methods: {
                detail(row) {
                    window.parent.MainIndex.addTabByIframe('查看出库单_' + row.id, '/Warehouse/StockOutShow?stockOutId=' + row.id, '查看出库单');
                },
                errorException(XMLHttpRequest, textStatus, errorThrown) {
                    if (XMLHttpRequest &&
                        XMLHttpRequest.responseJSON &&
                        errorThrown == "Unauthorized") {
                        window.parent.MainIndex.openLoginFrom();
                        this.$message({
                            type: 'error',
                            message: XMLHttpRequest.responseJSON.msg
                        });
                    } else {
                        this.$message({
                            type: 'error',
                            message: errorThrown
                        });
                    }
                },
                getWarehouseSimpleList(action) {
                    var _self = this;
                    $.ajax({
                        type: 'GET',
                        url: '/rest/warehouse/list/simple/get',
                        success: function (data) {
                            if (data.success == true) {
                                _self.warehouseList = data.data;
                                _self.warehouseList.unshift({
                                    id: 0,
                                    number: '全部显示'
                                });

                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        complete() {
                            if (action)
                                action();
                        }
                    });
                },
                // 改变每页显示几条数据
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getStockOutList();
                },
                //【点击第几页】
                handleCurrentChange(val) {
                    this.page = val;
                    this.getStockOutList();
                },
                update_status(index, row, status) {
                    var _self = this;
                    this.$confirm("确定修改状态吗", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            url: '/rest/warehouse/stock/out/status/update',
                            data: { id: row.id, status: status },
                            success: function (data) {
                                if (data.success == true) {
                                    _self.$notify.success({
                                        title: '成功',
                                        message: "更新状态成功"
                                    });
                                    _self.getStockOutList();
                                } else {
                                    _self.$notify.error({
                                        title: '错误',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                errorException(XMLHttpRequest, textStatus, errorThrown);
                            }
                        });
                    }).catch(() => {

                    });
                },
                getStockOutList() {
                    this.listLoading = true;
                    var _self = this;
                    $.ajax({
                        type: 'GET',
                        url: '/rest/warehouse/stock/out/list',
                        data: {                            
                            searchType: _self.filters.searchType,
                            searchKey: _self.filters.searchKey,
                            warehouseId: _self.filters.warehouseId,
                            status: _self.filters.status,
                            isDeleted: _self.filters.isDeleted,
                            pageSize: _self.pageSize,
                            currentPage: _self.page
                        },
                        success: function (data) {
                            if (data.success == true) {
                                _self.total = data.page.totalCount;
                                _self.stockOutList = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            errorException(XMLHttpRequest, textStatus, errorThrown);
                        },
                        complete() {
                            _self.listLoading = false;
                        }
                    });
                },
                search() {
                    this.getStockOutList();
                },
                addMoving() {
                    window.parent.MainIndex.addTabByIframe('添加调拔出库单', '/Warehouse/StockOutEdit?stockOutId=0', '添加调拔出库单');

                },
                editMoving(row) {
                    window.parent.MainIndex.addTabByIframe('修改调拔出库单_' + row.id, '/Warehouse/StockOutEdit?stockOutId=' + row.id, '修改调拔出库单');
                },
                del(index, row) {
                    var _self = this;
                    this.$confirm("确定删除出库单吗", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            url: '/rest/Warehouse/stock/out/delete' + row.id,
                            success: function (data) {
                                if (data.success == true) {
                                    _self.$message({
                                        type: 'success',
                                        message: '删除成功'
                                    });
                                    _self.getStockOutList();
                                } else {
                                    _self.$notify.error({
                                        title: '错误',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                errorException(XMLHttpRequest, textStatus, errorThrown);
                            }
                        });
                    }).catch(() => {

                    });
                },
                rec(index, row) {
                    var _self = this;
                    this.$confirm("确定恢复出库单吗", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            url: '/rest/Warehouse/stock/out/recovery/' + row.id,
                            success: function (data) {
                                if (data.success == true) {
                                    _self.$message({
                                        type: 'success',
                                        message: '恢复成功'
                                    });
                                    _self.getStockOutList();
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                errorException(XMLHttpRequest, textStatus, errorThrown);
                            }
                        });
                    }).catch(() => {

                    });
                }
            },
            mounted() {
                this.listLoading = true;
            }
        }
        var Ctor = Vue.extend(Main)
        new Ctor().$mount('#stockoutlist')
    </script>

</body>


