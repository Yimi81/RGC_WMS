
@{
    ViewData["Title"] = "StockInEdit";
}


<link rel="stylesheet" href="/lib/elFinder/lib/jquery-ui/themes/base/all.css" />
<link rel="stylesheet" href="/lib/elFinder/lib/elfinder/css/elfinder.full.css" />
<link rel="stylesheet" href="/lib/elFinder/lib/elfinder/css/theme.css" />
<style>
    .w365 {
        width: 365px;
    }

    .el-card {
        border: none;
    }

    .el-card__header {
        border-bottom: none;
        padding-left: 0;
    }

    .el-card__body {
        padding-left: 0;
    }

    .hide-empty .el-table__empty-block {
        display: none;
    }

    .search {
        margin-bottom: 5px;
    }
</style>
<body class="plr20">
    <div id="wrapper">
        <!-- 标题和地址 -->
        <el-row>
            <el-col :span="24" class="breadcrumb-container">
                <el-breadcrumb separator="/">
                    <el-breadcrumb-item><strong>库存管理</strong></el-breadcrumb-item>
                    @{
                        if (ViewBag.stockInId > 0)
                        {
                            <el-breadcrumb-item>编辑发货入库单</el-breadcrumb-item>
                        }
                        else
                        {
                            <el-breadcrumb-item>添加发货入库单</el-breadcrumb-item>
                        }
                    }
                </el-breadcrumb>
            </el-col>
        </el-row>
        <template>
            <article class="administration-maintenance-container" v-loading="listLoading">
                <div ref="nav_sku" id="nav_sku">
                    <el-form :inline="true" :model="tableEditStockIn.editData" ref="stockInFrom" label-width="300px" class="stockInFrom" label-position="right" size="mini">
                        <!-- 仓库信息 -->
                        <el-card class="box-card" shadow="none" v-if="tableEditStockIn.editData.id <= 0">
                            <span slot="header" class="step-jump pr" id="sku_config">
                                <i class="tip-tit"><i class="pr z-in2 pl10">仓库信息</i></i>
                            </span>
                            <el-form-item label="仓库" prop="warehouseId">
                                <el-select v-model="tableEditStockIn.editData.warehouseId"
                                           placeholder="请选择仓库"
                                           class="w365"
                                           size="small">
                                    <el-option v-for="item in warehouseList"
                                               :key="item.id"
                                               :label="item.number"
                                               :value="item.id">
                                    </el-option>
                                </el-select>
                            </el-form-item>
                        </el-card>

                        <el-card class="box-card" shadow="none">
                            <span slot="header" class="step-jump pr" id="sku_config">
                                <i class="tip-tit"><i class="pr z-in2 pl10">入库详情</i></i>
                            </span>
                            <el-form-item label="发货单" prop="packingList">
                                <el-button v-if="tableEditStockIn.editData.id <= 0"
                                           size="small"
                                           plain
                                           v-on:click="openSelectPackingListView">选择发货单</el-button>
                            </el-form-item>
                            <el-table :data="tableEditStockIn.editData.stockInList"
                                      :span-method="objectSpanMethod"
                                      min-height="250"
                                      style="width: 100%;margin-bottom:0px;"
                                      border
                                      class="gvq hide-empty mt20"
                                      size="mini">
                                <el-table-column label="序号" prop="detailId" width="45" align="center">
                                    <template slot-scope="scope">
                                        <i>{{scope.$index + 1}}</i>
                                    </template>
                                </el-table-column>
                                <el-table-column label="仓库" prop="warehouseNumber" width="45" align="center">
                                    <template slot-scope="scope">
                                        <i>{{scope.row.warehouseNumber}}</i>
                                    </template>
                                </el-table-column>
                                <el-table-column label="合同号" prop="contractNo" width="120" align="center">
                                    <template slot-scope="scope">
                                        <i>{{scope.row.contractNo}}</i>
                                    </template>
                                </el-table-column>
                                <el-table-column label="箱号" prop="containerNo" width="120" align="center">
                                    <template slot-scope="scope">
                                        <i>{{scope.row.containerNo}}</i>
                                    </template>
                                </el-table-column>
                                <el-table-column label="产品型号" prop="factoryModel" width="150" align="center">
                                    <template slot-scope="scope">
                                        <i>{{scope.row.factoryModel}}</i>
                                        <el-popover placement="top-start"
                                                    width="160"
                                                    v-model="scope.row.visible">
                                            <p>确定移除该型号?</p>
                                            <div class="tr mt10">
                                                <el-button size="mini" type="warning" v-on:click="scope.row.visible = false" plain>取消</el-button>
                                                <el-button type="danger" size="mini" v-on:click="tableEditStockIn.editData.stockInList.splice(scope.$index , 1); merge();" plain>确定</el-button>
                                            </div>
                                            <el-button slot="reference" type="danger" size="mini" icon="el-icon-delete" circle plain></el-button>
                                        </el-popover>
                                    </template>
                                </el-table-column>
                                <el-table-column label="数量" prop="qty" width="60" align="center">
                                    <template slot-scope="scope">
                                        <i>{{scope.row.qty}}</i>
                                    </template>
                                </el-table-column>
                                <el-table-column label="ETD" prop="etd" width="90" align="center">
                                    <template slot-scope="scope">
                                        <i>{{scope.row.etd}}</i>
                                    </template>
                                </el-table-column>
                                <el-table-column label="ETA" prop="eta" width="90" align="center">
                                    <template slot-scope="scope">
                                        <i>{{scope.row.eta}}</i>
                                    </template>
                                </el-table-column>
                                <el-table-column label="实际到港日期" width="155" align="center">
                                    <template slot-scope="scope">
                                        <el-date-picker v-model="scope.row.ataPort"
                                                        type="date"
                                                        format="yyyy/MM/dd"
                                                        value-format="yyyy/MM/dd"
                                                        placeholder="选择到港日期" style="width:135px" size="mini">
                                        </el-date-picker>
                                    </template>
                                </el-table-column>
                                <el-table-column label="实际到仓日期" width="155" align="center">
                                    <template slot-scope="scope">
                                        <el-date-picker v-model="scope.row.ataWarehouse"
                                                        type="date"
                                                        format="yyyy/MM/dd"
                                                        value-format="yyyy/MM/dd"
                                                        placeholder="选择到仓日期" style="width:135px" size="mini">
                                        </el-date-picker>
                                    </template>
                                </el-table-column>
                                <el-table-column label="实际型号" width="120" align="center">
                                    <template slot-scope="scope">
                                        <p>{{scope.row.actFactoryModel}}</p>
                                        <el-button type="primary" plain v-on:click="openSelectBatchView(scope.row)"
                                                   style="width:100px" size="mini">
                                            选择产品
                                            <i class="el-icon-menu"></i>
                                        </el-button>
                                    </template>
                                </el-table-column>
                                <el-table-column label="实际数量" prop="actInQty" width="80" align="center">
                                    <template slot-scope="scope">
                                        <el-input-number v-model="scope.row.actInQty" :controls="false" :min="0" style="width:60px" size="mini" />
                                    </template>
                                </el-table-column>
                                <el-table-column label="延迟原因" prop="reason" align="center">
                                    <template slot-scope="scope">
                                        <el-input v-model="scope.row.reason" type="textarea" :rows="2" size="mini" />
                                    </template>
                                </el-table-column>
                            </el-table>
                        </el-card>

                        <!-- 其它信息 -->
                        <el-card class="box-card" shadow="none">
                            <span slot="header" class="step-jump pr" id="sku_config">
                                <i class="tip-tit"><i class="pr z-in2 pl10">其它信息</i></i>
                            </span>
                            <el-row>
                                <el-form-item label="备注" prop="remark">
                                    <el-input v-model="tableEditStockIn.editData.remark"
                                              type="textarea"
                                              :rows="6" :maxlength="512" :show-word-limit="true" class="w365" />
                                </el-form-item>
                            </el-row>
                        </el-card>

                        <div style="text-align: center; margin-top: 20px;">
                            <el-button type="primary" size="mini" v-on:click="save" v-loading="listLoading">保 存</el-button>
                        </div>
                    </el-form>
                    <!-- 选择发货单 -->
                    <el-dialog title="选择发货单" :visible.sync="packingListVisable" :close-on-click-modal="false" top="5%" width="1200px">
                        <article class="search">
                            <section>
                                <el-select v-model="packingFilters.searchType" placeholder="请选择检索类目" style="width:90px" size="small">
                                    <el-option v-for="item in searchTypeList"
                                               :key="item.value"
                                               :label="item.label"
                                               :value="item.value">
                                    </el-option>
                                </el-select>
                                <el-input placeholder="搜索"
                                          v-model="packingFilters.searchKey"
                                          v-on:keyup.enter.native="getPackingList()" style="width: 200px" size="small" clearable></el-input>

                                <el-button v-on:click="packingSearch" icon="el-icon-search" size="small">搜索</el-button>
                            </section>
                        </article>
                        <el-row>
                            <el-col>
                                <el-table class="data-table"
                                          row-key="id"
                                          v-loading="packingListLoading"
                                          :data="packingList"
                                          :fit="true"
                                          default-expand-all
                                          border
                                          size="small">
                                    <el-table-column type="expand">
                                        <template slot-scope="scope">
                                            <el-table class="data-table"
                                                      :data="scope.row.detail"
                                                      :fit="true"
                                                      border
                                                      size="small">
                                                <el-table-column min-width="60" label="箱号" align="center">
                                                    <template slot-scope="scopeDetail">
                                                        <i>{{scopeDetail.row.containerNo}}</i>
                                                    </template>
                                                </el-table-column>
                                                <el-table-column min-width="120" label="产品" align="center">
                                                    <template slot-scope="scopeDetail">
                                                        <i>{{scopeDetail.row.sku.fullEName}}</i>
                                                    </template>
                                                </el-table-column>
                                                <el-table-column min-width="60" label="产品型号" align="center">
                                                    <template slot-scope="scopeDetail">
                                                        <i>{{scopeDetail.row.sku.factoryModel}}</i>
                                                    </template>
                                                </el-table-column>
                                                <el-table-column min-width="40" prop="qty" label="数量" align="center">
                                                    <template slot-scope="scopeDetail">
                                                        <i>{{scopeDetail.row.qty}}</i>
                                                    </template>
                                                </el-table-column>
                                                <el-table-column min-width="60" prop="etd" label="ETD" align="center">
                                                    <template slot-scope="scopeDetail">
                                                        <i>{{scopeDetail.row.etd}}</i>
                                                    </template>
                                                </el-table-column>
                                                <el-table-column min-width="60" prop="eta" label="ETA" align="center">
                                                    <template slot-scope="scopeDetail">
                                                        <i>{{scopeDetail.row.eta}}</i>
                                                    </template>
                                                </el-table-column>
                                            </el-table>
                                        </template>
                                    </el-table-column>
                                    <el-table-column min-width="20" prop="id" label="序号" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.$index + 1}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column min-width="60" label="仓库" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.row.toWarehouse.number}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column min-width="80" label="合同号" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.row.contractNo}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column min-width="130" label="创建时间" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.row.creationTimeString}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column min-width="60" label="创建人" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.row.createUser}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column width="100" label="操作" align="center">
                                        <template slot-scope="scope">
                                            <el-button type="primary" size="small" class="waves-effect mb5" v-on:click="choosePackingList(scope.row)">
                                                选择
                                            </el-button>
                                        </template>
                                    </el-table-column>
                                </el-table>
                            </el-col>
                            <el-col :span="24" class="toolbar">
                                <el-pagination v-on:size-change="packingHandleSizeChange" v-on:current-change="packingHandleCurrentChange" :current-page="packingPage" :page-sizes="[10,20,30,40,50]" :page-size="packingPageSize" layout="total, sizes, prev, pager, next, jumper" :total="packingTotal" style="float:right;">
                                </el-pagination>
                            </el-col>
                        </el-row>
                    </el-dialog>

                    <!-- 选择产品批次 -->
                    <el-dialog title="选择产品批次" :visible.sync="batchListVisable" :close-on-click-modal="false" top="5%" width="1200px">
                        <article class="search">
                            <section>
                                <el-input placeholder="可根据工厂型号或批次号搜索" v-model="batchFilters.searchKey"
                                          v-on:keyup.enter.native="getSkuCostBatchList()" style="width:250px" clearable size="small"></el-input>

                                <el-button v-on:click="batchSearch" icon="el-icon-search" size="small">搜索</el-button>
                            </section>
                        </article>
                        <el-row>
                            <el-col>
                                <el-table class="data-table" v-loading="batchListLoading" :data="batchList" :fit="true" border size="small">
                                    <el-table-column min-width="20" prop="id" label="序号" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.$index + 1}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column min-width="100" label="工厂型号" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.row.sku.factoryModel}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column width="120" label="图片" align="center">
                                        <template slot-scope="scope">
                                            <img v-if="scope.row.sku.primaryImageSrcFull" class="pimg" alt="no image" :src="scope.row.sku.primaryImageSrcFull" height="50">
                                        </template>
                                    </el-table-column>
                                    <el-table-column min-width="100" abel="批次号" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.row.batchNo}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column label="状态" width="110" align="center">
                                        <template slot-scope="scope">
                                            <el-tag size="small" v-if="scope.row.status == 0" type="info">在制</el-tag>
                                            <el-tag size="small" v-if="scope.row.status == 1" type="warning">在途</el-tag>
                                            <el-tag size="small" v-if="scope.row.status == 2" type="success">已到货</el-tag>
                                            <el-tag size="small" v-if="scope.row.status == 3">在售</el-tag>
                                            <el-tag size="small" v-if="scope.row.status == 4" type="danger">售罄</el-tag>
                                        </template>
                                    </el-table-column>
                                    <el-table-column min-width="100" label="创建时间" align="center">
                                        <template slot-scope="scope">
                                            <i>{{scope.row.creationTimeString}}</i>
                                        </template>
                                    </el-table-column>
                                    <el-table-column width="100" label="操作" align="center">
                                        <template slot-scope="scope">
                                            <el-button type="primary" size="small" class="waves-effect mb5" v-on:click="chooseBatch(scope.row)">
                                                选择
                                            </el-button>
                                        </template>
                                    </el-table-column>
                                </el-table>
                            </el-col>
                            <el-col :span="24" class="toolbar">
                                <el-pagination v-on:size-change="batchHandleSizeChange" v-on:current-change="batchHandleCurrentChange" :current-page="batchPage" :page-sizes="[10,20,30,40,50]" :page-size="batchPageSize" layout="total, sizes, prev, pager, next, jumper" :total="batchTotal" style="float:right;">
                                </el-pagination>
                            </el-col>
                        </el-row>
                    </el-dialog>
                </div>
            </article>
        </template>
    </div>
    <script src="/lib/elFinder/lib/jquery-ui/jquery-ui.min.js"></script>
    <script src="/lib/elFinder/lib/elfinder/js/elfinder.full.js"></script>
    <script src="/lib/elFinder/lib/elfinder/js/i18n/elfinder.zh_CN.js"></script>
    <script>
        var Main = {
            data() {
                return {
                    mergeArr: {},
                    mergeRowFields: ["warehouseNumber", "contractNo", "containerNo"],

                    tableEditStockIn: {
                        editData: {
                            id: 0,
                            stockInNum: '',
                            warehouseId: 0,
                            remark: '',
                            currentSelectBatchRowId: 0,
                            stockInList: []
                        }
                    },
                    warehouseList: [],
                    searchTypeList: [{
                        value: 'contractNo',
                        label: '合同号'
                    }, {
                        value: 'containerNo',
                        label: '箱号'
                    }, {
                        value: 'skuName',
                        label: '产品'
                    }, {
                        value: 'factoryModel',
                        label: '型号'
                    }],
                    listLoading: false,
                    packingListLoading: false,
                    packingListVisable: false,
                    packingList: [],
                    packingFilters: {
                        searchType: 'factoryModel',
                        searchKey: ''
                    },
                    packingTotal: 30,
                    packingPage: 1,
                    packingPageSize: 10,

                    batchListLoading: false,
                    batchListVisable: false,
                    batchList: [],
                    batchFilters: {
                        searchKey: ''
                    },
                    batchTotal: 30,
                    batchPage: 1,
                    batchPageSize: 10
                }
            },
            created() {
                var stockInId = getQueryString("stockInId");
                if (stockInId && parseInt(stockInId) > 0) {
                    this.tableEditStockIn.editData.id = parseInt(stockInId);
                    this.getWarehouseSimpleList(this.getStockIn);
                }
                else {
                    this.getWarehouseSimpleList();
                }
            },
            methods: {
                getWarehouseSimpleList(action) {
                    var $this = this;
                    $.ajax({
                        type: 'GET',
                        url: '/rest/warehouse/list/simple/get',
                        success: function (data) {
                            if (data.success == true) {
                                $this.warehouseList = data.data;
                                $this.warehouseList.unshift({
                                    id: 0,
                                    number: '请选择仓库'
                                });

                            } else {
                                $this.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        complete() {
                            if (action)
                                action();
                        }
                    });
                },
                errorException(XMLHttpRequest, textStatus, errorThrown) {
                    if (XMLHttpRequest &&
                        XMLHttpRequest.responseJSON &&
                        errorThrown == "Unauthorized") {
                        window.parent.MainIndex.openLoginFrom();
                        this.$message({
                            type: 'error',
                            message: XMLHttpRequest.responseJSON.msg
                        });
                    } else {
                        this.$message({
                            type: 'error',
                            message: errorThrown
                        });
                    }
                },

                openSelectPackingListView() {
                    this.packingListVisable = true;
                    this.getPackingList();
                },
                getPackingList() {
                    var $this = this;
                    $this.packingListLoading = true;
                    $.ajax({
                        type: 'Get',
                        url: '/rest/purchase/packinglist/list',
                        data: {
                            searchType: $this.packingFilters.searchType,
                            searchKey: $this.packingFilters.searchKey,
                            warehouseId: $this.tableEditStockIn.editData.warehouseId,
                            isDeleted: 1,
                            pageSize: $this.packingPageSize,
                            currentPage: $this.packingPage
                        },
                        success: function (data) {
                            if (data.success == true) {
                                $this.packingTotal = data.page.totalCount;
                                $this.packingList = data.data;
                            } else {
                                $this.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $this.errorException(XMLHttpRequest, textStatus, errorThrown);
                        },
                        complete() {
                            $this.packingListLoading = false;
                        }
                    });
                },
                packingHandleSizeChange(val) {
                    this.packingPageSize = val;
                    this.getPackingList();
                },
                //【点击第几页】
                packingHandleCurrentChange(val) {
                    this.packingPage = val;
                    this.getPackingList();
                },
                packingSearch() {
                    this.getPackingList();
                },
                choosePackingList: function (row) {
                    this.tableEditStockIn.editData.stockInList = [];
                    row.primaryId = row.id;
                    var stockInDetail = row.detail;
                    delete row.id;
                    delete row.detail;

                    if (stockInDetail) {
                        for (var i = 0; i < stockInDetail.length; i++) {
                            var newPush = $.extend(row, stockInDetail[i]);
                            this.tableEditStockIn.editData.stockInList.push({
                                id: 0,
                                primaryId: newPush.primaryId,
                                detailId: newPush.id,

                                sourceWarehouseId: newPush.toWarehouseId,
                                sourceProductId: newPush.productId,
                                sourceSkuId: newPush.skuId,
                                sourceSkuCostId: newPush.skuCostId,
                                sourceSkuCostBatchId: newPush.skuCostBatchId,
                                sourceSkuStockId: newPush.skuStockId,

                                warehouseNumber: newPush.toWarehouse.number,
                                contractNo: newPush.contractNo,
                                containerNo: newPush.containerNo,
                                factoryModel: newPush.sku.factoryModel,
                                qty: newPush.qty,
                                etd: newPush.etd,
                                eta: newPush.eta,

                                targetProductId: 0,
                                targetSkuId: 0,
                                targetSkuCostId: 0,
                                targetSkuCostBatchId: 0,
                                targetSkuStockId: 0,

                                ataPort: '',
                                ataWarehouse: '@DateTime.Now.ToDateZNString()',
                                actFactoryModel: '',
                                actInQty: 0,
                                reason: ''
                            });
                        }
                    }
                    this.packingListVisable = false;
                    this.merge();
                },

                openSelectBatchView(row) {
                    this.batchListVisable = true;
                    this.tableEditStockIn.editData.currentSelectBatchRowId = row.detailId;
                    this.getSkuCostBatchList();
                },
                getSkuCostBatchList: function () {
                    var $this = this;
                    $this.batchListLoading = true;
                    $this.batchList = [];
                    $.ajax({
                        type: 'GET',
                        url: '/rest/sku/cost/batch/list/simple/get',
                        data: {
                            searchKey: $this.batchFilters.searchKey,
                            pageSize: $this.batchPageSize,
                            currentPage: $this.batchPage
                        },
                        success: function (data) {
                            if (data.success == true) {
                                $this.batchTotal = data.page.totalCount;
                                $this.batchList = data.data;
                            } else {
                                $this.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $this.errorException(XMLHttpRequest, textStatus, errorThrown);
                        },
                        complete() {
                            $this.batchListLoading = false;
                        }
                    });
                },
                batchHandleSizeChange(val) {
                    this.batchPageSize = val;
                    this.getSkuCostBatchList();
                },
                //【点击第几页】
                batchHandleCurrentChange(val) {
                    this.batchPage = val;
                    this.getSkuCostBatchList();
                },
                batchSearch() {
                    this.getSkuCostBatchList();
                },
                chooseBatch: function (row) {
                    if (this.tableEditStockIn.editData.stockInList) {
                        for (let i = 0; i < this.tableEditStockIn.editData.stockInList.length; i++) {
                            if (this.tableEditStockIn.editData.stockInList[i].detailId === this.tableEditStockIn.editData.currentSelectBatchRowId) {
                                this.tableEditStockIn.editData.stockInList[i].actFactoryModel = row.sku.factoryModel;

                                this.tableEditStockIn.editData.stockInList[i].targetProductId = row.productId;
                                this.tableEditStockIn.editData.stockInList[i].targetSkuId = row.skuId;
                                this.tableEditStockIn.editData.stockInList[i].targetSkuCostId = row.skuCostId;
                                this.tableEditStockIn.editData.stockInList[i].targetSkuCostBatchId = row.skuCostBatchId;
                                this.tableEditStockIn.editData.stockInList[i].targetSkuStockId = row.skuStockId;
                                break;
                            }
                        }
                    }
                    this.batchListVisable = false;
                    this.merge();
                },

                getStockIn() {
                    var $this = this;
                    $.ajax({
                        type: 'GET',
                        url: '/rest/warehouse/stock/in/get/' + $this.tableEditStockIn.editData.id,
                        success: function (data) {
                            if (data.success == true) {
                                var row = data.data;
                                $this.tableEditStockIn.editData.stockInNum = row.stockInNum;
                                $this.tableEditStockIn.editData.warehouseId = row.warehouseId;
                                $this.tableEditStockIn.editData.remark = row.remark;

                                $this.tableEditStockIn.editData.stockInList = [];
                                row.primaryId = row.id;
                                var stockInDetail = row.detail;
                                delete row.id;
                                delete row.detail;

                                if (stockInDetail) {
                                    for (let i = 0; i < stockInDetail.length; i++) {
                                        let newPush = $.extend(row, stockInDetail[i]);
                                        $this.tableEditStockIn.editData.stockInList.push({
                                            id: newPush.id,
                                            primaryId: newPush.packingId,
                                            detailId: newPush.packingDetailId,

                                            sourceWarehouseId: 0,
                                            sourceProductId: 0,
                                            sourceSkuId: 0,
                                            sourceSkuCostId: 0,
                                            sourceSkuCostBatchId: 0,
                                            sourceSkuStockId: 0,

                                            warehouseNumber: newPush.warehouse.number,
                                            contractNo: newPush.packingList.contractNo,
                                            containerNo: newPush.packingDetail.containerNo,
                                            factoryModel: newPush.sku.factoryModel,
                                            qty: newPush.planInQty,
                                            etd: newPush.etd,
                                            eta: newPush.eta,

                                            targetProductId: newPush.productId,
                                            targetSkuId: newPush.skuId,
                                            targetSkuCostId: newPush.skuCostId,
                                            targetSkuCostBatchId: newPush.skuCostBatchId,
                                            targetSkuStockId: 0,

                                            ataPort: newPush.ataPort,
                                            ataWarehouse: newPush.ataWarehouse,
                                            actFactoryModel: newPush.actFactoryModel,
                                            actInQty: parseInt(newPush.actInQty),
                                            reason: newPush.reason
                                        });
                                    }
                                }
                                $this.merge();
                            } else {
                                $this.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $this.errorException(XMLHttpRequest, textStatus, errorThrown);
                        }
                    });
                },
                //合并的方法
                objectSpanMethod({ row, column, rowIndex, columnIndex }) {
                    if (this.mergeRowFields.indexOf(column.property) >= 0) {
                        const _row = this.mergeArr[column.property].array[rowIndex];
                        const _col = _row > 0 ? 1 : 0;
                        return {
                            rowspan: _row,
                            colspan: _col
                        };
                    }
                },
                merge() {
                    this.mergeArr = {};
                    let tableData = this.tableEditStockIn.editData.stockInList;
                    if (tableData && tableData.length > 0) {
                        for (let i = 0; i < tableData.length; i++) {
                            if (i === 0) {
                                for (let i = 0; i < this.mergeRowFields.length; i++) {
                                    this.mergeArr[this.mergeRowFields[i]] = {
                                        array: [1],
                                        position: 0
                                    };
                                }
                            }
                            else {
                                for (let sPropertyName in tableData[i]) {
                                    if (this.mergeRowFields.indexOf(sPropertyName) >= 0) {
                                        // 判断当前元素与上一个元素是否相同(第1和第2列)
                                        if (tableData[i][sPropertyName] === tableData[i - 1][sPropertyName]) {
                                            this.mergeArr[sPropertyName].array[this.mergeArr[sPropertyName].position] += 1;
                                            this.mergeArr[sPropertyName].array.push(0);
                                        } else {
                                            this.mergeArr[sPropertyName].array.push(1);
                                            this.mergeArr[sPropertyName].position = i;
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                resetInputData: function (tInputData) {
                    //重新组装编辑的数据
                    var tInput = {
                        id: tInputData.id,
                        stockInType: 1,
                        packingId: tInputData.stockInList[0].primaryId,
                        warehouseId: tInputData.warehouseId > 0 ? tInputData.warehouseId : tInputData.stockInList[0].sourceWarehouseId,
                        detail: [],
                        remark: tInputData.remark,
                    };
                    tInputData.stockInList.forEach(function (tStockInDetail) {
                        var tInputDetail = {
                            id: tStockInDetail.id,
                            packingDetailId: tStockInDetail.detailId,
                            productId: tStockInDetail.targetProductId,
                            skuId: tStockInDetail.targetSkuId,
                            skuCostId: tStockInDetail.targetSkuCostId,
                            skuCostBatchId: tStockInDetail.targetSkuCostBatchId,
                            skuStockId: tStockInDetail.targetSkuStockId,
                            planInQty: tStockInDetail.qty,
                            etd: tStockInDetail.etd,
                            eta: tStockInDetail.eta,
                            actInQty: tStockInDetail.actInQty,
                            actFactoryModel: tStockInDetail.actFactoryModel,
                            ataPort: tStockInDetail.ataPort,
                            ataWarehouse: tStockInDetail.ataWarehouse,
                            reason: tStockInDetail.reason
                        };
                        tInput.detail.push(tInputDetail);
                    });
                    console.log(tInput);
                    return tInput;
                },
                clear() {
                    this.tableEditStockIn.editData.warehouseId= 0;
                    this.tableEditStockIn.editData.remark = '';
                    this.tableEditStockIn.editData.currentSelectBatchRowId = 0;
                    this.tableEditStockIn.editData.stockInList = [];
                },
                save() {
                    var _valid = false;
                    var $this = this;

                    $this.$refs.stockInFrom.validate((valid) => {
                        if (valid) {
                            _valid = true;

                        }
                    });

                    if (!_valid) {
                        return false;
                    }

                    if (!($this.tableEditStockIn.editData.stockInList && $this.tableEditStockIn.editData.stockInList.length > 0)) {
                        $this.$notify.error({
                            title: '错误',
                            message: '数据不能为空'
                        });
                    }

                    var sOutMessage = '添加成功';
                    var sPostUrl = '/rest/warehouse/stock/in/create';
                    if ($this.tableEditStockIn.editData.id > 0) {
                        sOutMessage = '修改成功';
                        sPostUrl = '/rest/warehouse/stock/in/update';
                    }

                    $this.listLoading = true
                    try {
                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            contentType: 'application/json',
                            url: sPostUrl,
                            data: JSON.stringify($this.resetInputData($this.tableEditStockIn.editData)),
                            success: function (data) {
                                if (data.success == true) {
                                    $this.$notify({
                                        title: '成功',
                                        message: sOutMessage,
                                        type: 'success'
                                    });
                                    if ($this.tableEditStockIn.editData.id <= 0)
                                        $this.clear();
                                }
                                else {
                                    $this.$notify.error({
                                        title: '错误',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                $this.errorException(XMLHttpRequest, textStatus, errorThrown);
                            },
                            complete() {
                                $this.listLoading = false;
                            }
                        });
                    }
                    catch (e) {
                        $this.listLoading = false;
                        $this.$message({
                            type: 'error',
                            message: e
                        });
                    }
                }
            }
        };
        var Ctor = Vue.extend(Main);
        new Ctor().$mount('#wrapper');

        function getQueryString(name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return unescape(r[2]); return null;
        }

    </script>
</body>

