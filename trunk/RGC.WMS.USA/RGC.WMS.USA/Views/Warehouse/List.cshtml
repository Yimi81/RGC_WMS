
@{
    ViewData["Title"] = "仓库列表";
}

<body class="plr20">
    <div id="warehouselist">
        <!-- 标题和地址 -->
        <el-row>
            <el-col :span="24" class="breadcrumb-container">
                <el-breadcrumb separator="/">
                    <el-breadcrumb-item><strong>系统管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>仓库列表</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>
        <article class="administration-tenant-container">
            <!--搜索-->
            <el-col :span="24" class="toolbar">
                <el-form :inline="true" size="small" :model="filters" v-on:submit.native.prevent>
                    <el-form-item>
                        <el-input placeholder="搜索" v-model="filters.searchKey"
                                  v-on:keyup.enter.native="getList()" clearable></el-input>
                    </el-form-item>

                    <el-form-item label="仓库状态">
                        <el-select 
                                   v-model="filters.status" 
                                   placeholder="请选择状态"
                                   style="width:100px">
                            <el-option v-for="item in statusList"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="是否删除">
                        <el-select 
                                   v-model="filters.isDeleted" 
                                   placeholder="请选择状态"
                                   style="width:100px">
                            <el-option v-for="item in deletedList"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </el-form-item>

                    <el-form-item>
                        <el-button v-on:click="search" icon="el-icon-search">搜索</el-button>
                    </el-form-item>
                    <el-form-item>
                        <el-button type="primary" v-on:click="create" icon="el-icon-edit">新增</el-button>
                    </el-form-item>
                </el-form>
            </el-col>
            <el-table class="data-table" size="small" v-loading="listLoading" ref="refTable" :data="list" :fit="true" border>
                <el-table-column min-width="40" label="ID" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.id}}</i>
                    </template>
                </el-table-column>
                <el-table-column min-width="100" label="仓库编号" align="center">
                    <template slot-scope="scope">
                        {{scope.row.number}}
                    </template>
                </el-table-column>
                <el-table-column min-width="200" label="仓库名称" align="center">
                    <template slot-scope="scope">
                        {{scope.row.name}}
                    </template>
                </el-table-column>
                <el-table-column min-width="80" label="邮编前缀" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.postCodePrefix}}</i>
                    </template>
                </el-table-column>
                <el-table-column min-width="60" label="仓库状态" align="center">
                    <template slot-scope="scope">
                        <el-tag type="primary" size="mini" v-if="scope.row.status == 1">初始状态</el-tag>
                        <el-tag type="primary" size="mini" v-if="scope.row.status == 2">正常状态</el-tag>
                        <el-tag type="info" size="mini" v-if="scope.row.status == 3">关闭状态</el-tag>
                    </template>
                </el-table-column>
                <el-table-column min-width="60" label="删除状态" align="center">
                    <template slot-scope="scope">
                        <el-tag type="primary" size="mini" v-if="!scope.row.isDeleted">未删除</el-tag>
                        <el-tag type="info" size="mini" v-if="scope.row.isDeleted">已删除</el-tag>
                    </template>
                </el-table-column>
                <el-table-column width="150" label="上次修改时间" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.lastModificationTimeString}}</i>
                    </template>
                </el-table-column>
                <el-table-column min-width="60" label="创建人" align="center">
                    <template slot-scope="scope">
                        <i>{{scope.row.createUser}}</i>
                    </template>
                </el-table-column>
                <el-table-column width="220" label="操作" align="center">
                    <template slot-scope="scope">
                        <el-dropdown trigger="click" size="small">
                            <el-button type="primary" size="mini" class="mb5">
                                操作
                                <i class="el-icon-caret-bottom el-icon--right"></i>
                            </el-button>
                            <el-dropdown-menu slot="dropdown">
                                <el-dropdown-item v-if="!scope.row.isDeleted">
                                    <div v-on:click="edit(scope.row)">修改</div>
                                </el-dropdown-item>
                                <el-dropdown-item v-if="!scope.row.isDeleted">
                                    <div v-on:click="del(scope.$index, scope.row)">删除</div>
                                </el-dropdown-item>
                                <el-dropdown-item v-if="scope.row.isDeleted">
                                    <div v-on:click="rec(scope.$index, scope.row)">恢复</div>
                                </el-dropdown-item>
                            </el-dropdown-menu>
                        </el-dropdown>
                    </template>
                </el-table-column>
            </el-table>
            <el-col :span="24" class="toolbar">
                <el-pagination v-on:size-change="handleSizeChange" v-on:current-change="handleCurrentChange" :current-page="page" :page-sizes="[10,20,30,40,50]" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total" style="float:right;">
                </el-pagination>
            </el-col>
        </article>

        <!--// 编辑仓库的弹出框-->
        <el-dialog width="70%"
                   :title="dialogEditWarehouse.title"
                   :visible.sync="dialogEditWarehouse.isShow"
                   size="tiny"
                   :close-on-click-modal="false">
            <el-row class="fsi" v-if="dialogEditWarehouse.editData.id>0">
                <el-col :span="12">
                    创建时间：{{ dialogEditWarehouse.editData.creationTimeString }}
                </el-col>
            </el-row>
            <el-tabs ref="tab" class="mt10" v-model="activeName">
                <el-tab-pane label="基础信息" name="first">
                    <el-form size="mini" :rules="rules" :model="dialogEditWarehouse.editData" ref="warehouseFrom" label-width="150px">
                        <el-form-item label="仓库编号：" prop="number">
                            <el-input placeholder="请填写仓库编号" v-model="dialogEditWarehouse.editData.number"></el-input>
                        </el-form-item>
                        <el-form-item label="仓库名称：" prop="name">
                            <el-input placeholder="请填写仓库名称" v-model="dialogEditWarehouse.editData.name"></el-input>
                        </el-form-item>
                        <el-form-item label="仓库状态：" prop="status">
                            <el-select v-model="dialogEditWarehouse.editData.status" placeholder="请选择状态" clearable>
                                <el-option v-for="item in statusEditList"
                                           :key="item.value"
                                           :label="item.label"
                                           :value="item.value">
                                </el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="邮编前缀：" prop="postCodePrefix">
                            <el-input placeholder="请填写邮编前缀" v-model="dialogEditWarehouse.editData.postCodePrefix"></el-input>
                        </el-form-item>
                        <el-form-item label="地址经度：" prop="Longitude">
                            <el-input placeholder="请填写地址经度" v-model="dialogEditWarehouse.editData.longitude"></el-input>
                        </el-form-item>
                        <el-form-item label="地址纬度：" prop="Latitude">
                            <el-input placeholder="请填写地址纬度" v-model="dialogEditWarehouse.editData.latitude"></el-input>
                        </el-form-item>
                        <el-form-item label="仓库地址：" prop="Address">
                            <el-input placeholder="请填写仓库地址" v-model="dialogEditWarehouse.editData.address" type="textarea" :rows="2"></el-input>
                        </el-form-item>
                        <el-form-item label="仓库备注：" prop="Remarks">
                            <el-input placeholder="请填写仓库备注" v-model="dialogEditWarehouse.editData.remarks" type="textarea" :rows="4"></el-input>
                        </el-form-item>
                    </el-form>
                </el-tab-pane>
            </el-tabs>
            <span slot="footer" class="dialog-footer">
                <el-button size="mini" v-on:click="dialogEditWarehouse.isShow = false">取消</el-button>
                <el-button size="mini" type="primary" v-on:click="saveWarehouse">保存</el-button>
            </span>
        </el-dialog>
    </div>
    <script>
        var Main = {
            data() {
                return {
                    listLoading: false,
                    list: [],                    
                    statusEditList: [{
                        value: 1,
                        label: '初始'
                    }, {
                        value: 2,
                        label: '正常'
                    }, {
                        value: 3,
                        label: '关闭'
                    }],
                    statusList: [{
                        value: 0,
                        label: '全部显示'
                    },{
                        value: 1,
                        label: '初始'
                    }, {
                        value: 2,
                        label: '正常'
                    }, {
                        value: 3,
                        label: '关闭'
                    }],
                    deletedList: [{
                        value: 0,
                        label: '全部显示'
                    }, {
                        value: 1,
                        label: '未删除'
                    }, {
                        value: 2,
                        label: '已删除'
                    }],
                    filters: {
                        searchKey: "",
                        status: 0,
                        isDeleted: 0
                    },
                    total: 100,
                    page: 1,
                    pageSize: 10,
                    dialogEditWarehouse: {
                        title: "",
                        isShow: false,
                        editData: {
                            id: 0,
                            number: "",
                            name: "",
                            postCodePrefix: "",
                            longitude: "",
                            latitude: "",
                            address: "",
                            status: 1,
                            remarks: ""
                        }
                    },
                    activeName: 'first',
                    rules: {
                        number: [{ required: true, message: '请输入仓库编号', trigger: 'change' }],
                        name: [{ required: true, message: '请输入仓库名称', trigger: 'change' }],
                        status: [{ required: true, message: '请选择仓库状态', trigger: 'change' }],
                        postCodePrefix: [{ required: true, message: '请输入邮编前缀', trigger: 'change' }]
                    }
                }
            },
            created() {
                this.getList();
            },
            methods: {
                // 改变每页显示几条数据
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getList();
                },
                //【点击第几页】
                handleCurrentChange(val) {
                    this.page = val;
                    this.getList();
                },
                getList() {
                    this.listLoading = true;
                    var _self = this;
                    $.ajax({
                        type: 'GET',
                        url: '/rest/warehouse/list',
                        data: {
                            key: _self.filters.searchKey,
                            status: _self.filters.status,
                            isDeleted: _self.filters.isDeleted,
                            pageSize: _self.pageSize,
                            currentPage: _self.page
                        },
                        success: function (data) {
                            if (data.success == true) {
                                _self.total = data.page.totalCount;
                                _self.list = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                        complete() {
                            _self.listLoading = false;
                        }
                    });
                },
                search() {
                    this.page = 1;
                    this.getList();
                },
                edit(row) {
                    var _self = this;
                    _self.dialogEditWarehouse.title = "编辑仓库 warehouseId:" + row.id;
                    _self.dialogEditWarehouse.isShow = true;
                    $.ajax({
                        type: 'GET',
                        url: '/rest/warehouse/get/' + row.id,
                        success: function (data) {
                            if (data.success == true) {
                                _self.dialogEditWarehouse.editData = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (XMLHttpRequest.status == 401 || errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                create: function () {
                    this.dialogEditWarehouse.title = "新增仓库";
                    this.dialogEditWarehouse.isShow = true;
                    this.dialogEditWarehouse.editData = {
                        id: 0,
                        number: "",
                        name: "",
                        postCodePrefix: "",
                        longitude: "",
                        latitude: "",
                        address: "",
                        status: 1,
                        remarks: ""
                    };
                    if (this.$refs.warehouseFrom)
                        this.$refs.warehouseFrom.resetFields();
                },
                saveWarehouse: function () {
                    var _self = this;
                    _self.$refs.warehouseFrom.validate((valid) => {
                        if (valid) {
                            if (_self.dialogEditWarehouse.editData.id > 0) {
                                $.ajax({
                                    type: 'POST',
                                    contentType: 'application/json',
                                    url: '/rest/warehouse/update',
                                    data: JSON.stringify(_self.dialogEditWarehouse.editData),
                                    success: function (data) {
                                        if (data.success == true) {
                                            _self.listLoading = false;
                                            _self.dialogEditWarehouse.isShow = false;
                                            _self.getList();
                                            _self.$notify.success({
                                                title: '成功',
                                                message: "仓库编辑成功"
                                            });
                                        } else {
                                            _self.listLoading = false;
                                            _self.$notify.error({
                                                title: '错误',
                                                message: data.msg
                                            });
                                        }
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                        if (XMLHttpRequest.status == 401 || errorThrown == "Unauthorized") {
                                            window.parent.MainIndex.openLoginFrom();
                                            _self.$message({
                                                type: 'error',
                                                message: XMLHttpRequest.responseJSON.msg
                                            });
                                        } else {
                                            _self.$message({
                                                type: 'error',
                                                message: errorThrown
                                            });
                                        }
                                    }
                                });
                            } else {
                                //新增用户
                                $.ajax({
                                    type: 'POST',
                                    url: '/rest/warehouse/create',
                                    contentType: 'application/json',
                                    data: JSON.stringify(_self.dialogEditWarehouse.editData),
                                    success: function (data) {
                                        if (data.success == true) {
                                            _self.listLoading = false;
                                            _self.dialogEditWarehouse.isShow = false;
                                            _self.getList();
                                            _self.$notify.success({
                                                title: '成功',
                                                message: "仓库新增成功"
                                            });
                                        } else {
                                            _self.listLoading = false;
                                            _self.$notify.error({
                                                title: '错误',
                                                message: data.msg
                                            });
                                        }
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                        if (XMLHttpRequest.status == 401 || errorThrown == "Unauthorized") {
                                            window.parent.MainIndex.openLoginFrom();
                                            _self.$message({
                                                type: 'error',
                                                message: XMLHttpRequest.responseJSON.msg
                                            });
                                        } else {
                                            _self.$message({
                                                type: 'error',
                                                message: errorThrown
                                            });
                                        }
                                    }
                                });
                            }
                        } else {
                            console.log('error submit!!');
                            return false;
                        }
                    });
                },
                del(index, row) {
                    var _self = this;
                    this.$confirm("确定删除仓库 " + row.name + " 吗", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            url: '/rest/warehouse/delete/' + row.id,
                            success: function (data) {
                                if (data.success == true) {
                                    _self.getList();
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                if (XMLHttpRequest.status == 401 || errorThrown == "Unauthorized") {
                                    window.parent.MainIndex.openLoginFrom();
                                    _self.$message({
                                        type: 'error',
                                        message: XMLHttpRequest.responseJSON.msg
                                    });
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: errorThrown
                                    });
                                }
                            }
                        });
                    }).catch(() => {

                    });
                },
                rec(index, row) {
                    var _self = this;
                    this.$confirm("确定恢复仓库 " + row.name + " 吗", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            url: '/rest/warehouse/recovery/' + row.id,
                            success: function (data) {
                                if (data.success == true) {
                                    _self.getList();
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                if (XMLHttpRequest.status == 401 || errorThrown == "Unauthorized") {
                                    window.parent.MainIndex.openLoginFrom();
                                    _self.$message({
                                        type: 'error',
                                        message: XMLHttpRequest.responseJSON.msg
                                    });
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: errorThrown
                                    });
                                }
                            }
                        });
                    }).catch(() => {

                    });
                }
            }
        }
        var Ctor = Vue.extend(Main)
        new Ctor().$mount('#warehouselist')
    </script>

</body>

