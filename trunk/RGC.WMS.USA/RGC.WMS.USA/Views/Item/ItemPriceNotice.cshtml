@*@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    }*@

<style>
    .canvasjs-chart-credit {
        display: none;
    }
</style>

<body class="plr20">
    <div id="itemPlatformProductPriceWarning">

        <!-- 导航提示 -->
        <el-row>
            <el-col :span="24" class="breadcrumb-container">
                <el-breadcrumb separator="/">
                    <el-breadcrumb-item><strong class="title">电商管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>平台产品价格预警</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>

        <!--搜索栏-->
        <el-row>
            <el-row>
                <el-col :span="24" class="toolbar">
                    <el-form :inline="true" :model="filters" size="small">
                        <el-form-item label="名称或型号">
                            <el-select v-model="filters.key" clearable filterable remote reserve-keyword
                                       placeholder="请输入名称或型号" :remote-method="remoteMethod" :loading="loading">
                                <el-option v-for="item in searchList" :key="item.value" :label="item.value"
                                           :value="item.value">
                                </el-option>
                            </el-select>

                        </el-form-item>
                        <el-form-item label="平台">
                            <el-select v-model="filters.platformIds" placeholder="请选择平台" multiple clearable>
                                <el-option v-for="item in platformList" :key="item.id" :label="item.ename"
                                           :value="item.id">
                                </el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="来源">
                            <el-select v-model="filters.sources" placeholder="请选择来源" multiple clearable>
                                <el-option v-for="item in sourceList" :key="item.id" :label="item.label"
                                           :value="item.id">
                                </el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="状态">
                            <el-select v-model="filters.status" placeholder="请选择状态" clearable>
                                <el-option v-for="item in statusList" :key="item.id" :label="item.label"
                                           :value="item.id">
                                </el-option>
                            </el-select>
                        </el-form-item><br />
                        <el-form-item label="日期" class="mt10">
                            <el-date-picker v-model="filters.dateRange" type="daterange" value-format="yyyy-MM-dd"
                                            range-separator="-" start-placeholder="开始日期" end-placeholder="结束日期">
                            </el-date-picker>

                        </el-form-item>
                        <el-form-item class="mt10">
                            <el-button icon="el-icon-search" v-on:click="getSearchList" size="small">查询</el-button>
                            <!-- <el-button type="primary" icon="el-icon-edit-outline" v-on:click="openAddForm()"
                                size="small">
                                人工录入</el-button> -->

                        </el-form-item>
                    </el-form>
                </el-col>
            </el-row>
            <el-row>
                <!-- 列表部分 -->
                <el-table :data="searchAllList" highlight-current-row v-loading="listLoading"
                          style="width: 100%" size="mini">
                    @*<el-table-column prop="id" label="Id" width="100" fixed="left"></el-table-column>
                        <el-table-column prop="itemId" label="itemId" width="100" fixed="left" sortable></el-table-column>*@
                    <el-table-column prop="itemName" label="产品名称" min-width="180" fixed="left" sortable>
                    </el-table-column>
                    <el-table-column width="120" label="图片" align="center" fixed="left">
                        <template slot-scope="scope">
                            <img v-if="scope.row.srcFull" class="pimg" alt="no image" :src="scope.row.srcFull"
                                 height="50">
                        </template>
                    </el-table-column>
                    <el-table-column prop="factoryModel" label="item型号" min-width="80" fixed="left" sortable>
                    </el-table-column>
                    <el-table-column prop="platformName" label="平台名称" min-width="80" fixed="left" sortable>
                    </el-table-column>
                    <el-table-column prop="source" label="来源" min-width="80" fixed="left" sortable>
                        <template slot-scope="scope">
                            <el-tag v-if="scope.row.source == 0">未知</el-tag>
                            <el-tag v-else-if="scope.row.source == 1" type="success">接口</el-tag>
                            <el-tag v-else-if="scope.row.source == 2" type="warning">爬虫</el-tag>
                            <el-tag v-else-if="scope.row.source == 3" type="info">人工录入</el-tag>
                        </template>

                    </el-table-column>

                    <el-table-column prop="price" label="当日零售价" width="150"></el-table-column>
                    <el-table-column prop="map" label="MAP" width="150"></el-table-column>
                    <el-table-column label="获取时间" min-width="120">
                        <template slot-scope="scope">
                            <span>{{scope.row.priceDate | dateFormatter()}}</span>
                        </template>
                    </el-table-column>
                    <el-table-column prop="status" label="状态" min-width="80">
                        <template slot-scope="scope">
                            <el-tag v-if="scope.row.status == 0" type="danger">未通知</el-tag>
                            <el-tag v-else-if="scope.row.status == 1" type="info">已通知</el-tag>
                            <el-tag v-else-if="scope.row.status == 2" type="success">已取消</el-tag>
                            <el-tag v-else-if="scope.row.status == 3" type="warning">异常</el-tag>

                        </template>
                    </el-table-column>
                    <el-table-column label="邮件通知时间" min-width="120">
                        <template slot-scope="scope">
                            <span>{{scope.row.sendTime | dateFormatter()}}</span>
                        </template>
                    </el-table-column>
                    <el-table-column width="100" label="操作">
                        <template slot-scope="scope">
                            <el-dropdown trigger="click" v-if="scope.row.status != 1">
                                <el-button type="primary" size="mini" class="mb5">
                                    操作
                                    <i class="el-icon-caret-bottom el-icon--right"></i>
                                </el-button>
                                <el-dropdown-menu slot="dropdown">
                                    <el-dropdown-item v-if="scope.row.status == 0">
                                        <div v-on:click="updateStatus(scope.row.id,2,scope.$index)">取消通知</div>
                                    </el-dropdown-item>

                                    <el-dropdown-item v-if="scope.row.status == 2">
                                        <div v-on:click="updateStatus(scope.row.id,0,scope.$index)">等待通知</div>
                                    </el-dropdown-item>

                                    <el-dropdown-item v-if="scope.row.status == 0">
                                        <div  v-on:click="sendEmail(scope.row.id,scope.$index)">发送邮件提醒</div>
                                    </el-dropdown-item>
                                </el-dropdown-menu>
                            </el-dropdown>
                            @*<el-dropdown trigger="click">
                                    <el-button type="warning" plain size="small" class="mb5">
                                        状态维护
                                        <i class="el-icon-caret-bottom el-icon--right"></i>
                                    </el-button>
                                    <el-dropdown-menu slot="dropdown">
                                        <el-dropdown-item>
                                            <div v-on:click="update_status(scope.$index, scope.row.id, 3)">审核通过</div>
                                        </el-dropdown-item>
                                        <el-dropdown-item>
                                            <div v-on:click="update_status(scope.$index, scope.row.id, 2)">审核不通过</div>
                                        </el-dropdown-item>
                                        <el-dropdown-item>
                                            <div v-on:click="update_status(scope.$index, scope.row.id, 7)">冻结</div>
                                        </el-dropdown-item>
                                        <el-dropdown-item>
                                            <div v-on:click="update_status(scope.$index, scope.row.id, 8)">淘汰</div>
                                        </el-dropdown-item>
                                    </el-dropdown-menu>
                                </el-dropdown>*@

                        </template>
                    </el-table-column>

                </el-table>
                <!--分页工具条-->
                <el-col :span="24" class="toolbar">
                    <el-pagination v-on:size-change="handleSizeChange" v-on:current-change="handleCurrentChange"
                                   :current-page="filters.currentPage" :page-sizes="[10,20,30,40,50]" :page-size="filters.pageSize"
                                   layout="total, sizes, prev, pager, next, jumper" :total="total" style="float:right;">
                    </el-pagination>
                </el-col>
            </el-row>
        </el-row>
    </div>
</body>
@section scripts{
    <script src="/Scripts/canvasjs.min.js"></script>
    <script type="text/javascript">
        var main = new Vue({
            el: '#itemPlatformProductPriceWarning',
            data() {
                return {
                    filters: {
                        key: '',
                        itemId: 0,
                        isValid: 0,
                        platformIds: [],
                        date: void 0,
                        currentPage: 1,
                        pageSize: 10,
                        isOnly: true,
                        sources: [],
                        dateRange: [],
                        startTime: void 0,
                        endTime: void 0,
                        status: void 0,
                    },
                    loading: false,
                    total: 0,
                    page: 1,
                    currentPage: 1,
                    pageSize: 10,
                    listLoading: false,
                    itemListLoading: false,
                    platformList: [],
                    sourceList: [],
                    nextSelect: false,
                    searchList: [],
                    searchInputList: [],
                    searchAllList: [],
                    statusList: [
                        { label: '未通知', id: 0 }, { label: '已通知', id: 1 },
                    ]
                }
            },
            filters: {
                dateFormatter,
            },
            methods: {
                sendEmail(id,index) {
                    var _self = this;
                    this.$confirm("确定发送邮件通知吗", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            url: '../../rest/item/notice/send/email',
                            data: { id: id },
                            success: function (data) {
                                if (data.success == true) {
                                    //_self.searchAllList[index].status = 1;
                                    _self.getSearchList();
                                    _self.$notify.success({
                                        title: '成功',
                                        message: "操作成功"
                                    });
                                } else {
                                    _self.$notify.error({
                                        title: '错误',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                if (errorThrown == "Unauthorized") {
                                    window.parent.MainIndex.openLoginFrom();
                                    _self.$message({
                                        type: 'error',
                                        message: XMLHttpRequest.responseJSON.msg
                                    });
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: errorThrown
                                    });
                                }
                            }
                        });
                    }).catch(() => {

                    });

                },
                updateStatus(id, status, index) {
                      var _self = this;
                    this.$confirm("确定执行该操作吗", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            url: '../../rest/item/notice/status/update',
                            data: { id: id, status: status },
                            success: function (data) {
                                if (data.success == true) {
                                    _self.searchAllList[index].status = status;
                                    _self.$notify.success({
                                        title: '成功',
                                        message: "操作成功"
                                    });
                                } else {
                                    _self.$notify.error({
                                        title: '错误',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                if (errorThrown == "Unauthorized") {
                                    window.parent.MainIndex.openLoginFrom();
                                    _self.$message({
                                        type: 'error',
                                        message: XMLHttpRequest.responseJSON.msg
                                    });
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: errorThrown
                                    });
                                }
                            }
                        });
                    }).catch(() => {

                    });

                },
                // 获取平台列表
                getPlatformList() {
                    var _self = this;//ajax中无法用this
                    $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        async: false,
                        url: '/rest/administration/platform/list',
                        success: function (data) {
                            _self.platformList = data.data;
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            this.listLoading = false;
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                this.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                this.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                //获取来源列表
                getSourceList() {
                    this.sourceList = [{ label: '未知', id: 0 }, { label: '接口', id: 1 }, { label: '爬虫', id: 2 }, { label: '人工录入', id: 3 }];
                },
                //条件查询数据
                getSearchList() {
                    var _self = this;
                    this.listLoading = true;
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        url: '/rest/item/pricenotice/search/list',
                        data: _self.filters,
                        success: function (data) {
                            _self.searchAllList = data.data.list;
                            _self.total = data.data.page.totalCount;
                            _self.page = data.data.page.totalPages;
                            _self.currentPage = data.data.page.currentPage;
                            _self.listLoading = false;;
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                //查询全部数据
                getList() {
                    var _self = this;
                    this.listLoading = true;
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        url: '/rest/item/pricenotice/list',
                        data: _self.filters,
                        success: function (data) {
                            if (data.success) {
                                _self.searchAllList = data.data.list;
                                _self.total = data.data.page.totalCount;
                                _self.page = data.data.page.totalPages;
                                _self.currentPage = data.data.page.currentPage;
                            }
                            else {
                                 _self.$message({
                                    type: 'error',
                                    message: data.msg
                                });
                            }
                          
                            _self.listLoading = false;;
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                //获取名称或型号搜索框内容
                getSearchAll() {
                    var _self = this;
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        url: '/rest/item/dailyprice/search/list',
                        data: _self.filters,
                        success: function (data) {
                            _self.searchInputList = data.data;
                            _self.listLoading = false;
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                //改变每页显示数据条数
                handleSizeChange(val) {
                    this.filters.pageSize = val;
                    this.pageSize = val;
                    this.getSearchList();
                },
                //点击第几页
                handleCurrentChange(val) {
                    this.filters.currentPage = val;
                    this.getSearchList();
                },
                //型号搜索框
                remoteMethod(query) {
                    var _self = this;
                    if (query !== '') {
                        _self.loading = true;
                        setTimeout(() => {
                            _self.loading = false;
                            _self.searchList = _self.searchInputList.filter(item => {
                                return item.value != null ? item.value.toLowerCase()
                                    .indexOf(query.toLowerCase()) > -1 : [];
                            });
                        }, 200);
                    } else {
                        this.searchList = [];
                    }
                },
            },
            created() {
                // 渲染搜索工具栏
                // this.filters.dateRange.push(dateFormatter(new Date(), false));
                // this.filters.dateRange.push(dateFormatter(new Date(), false));
                this.getPlatformList();
                this.getSourceList();
                this.getList();
                this.getSearchAll();
            },
        });

        // 时间格式化
        function dateFormatter(str) {//默认返回yyyy-MM-dd HH-mm-ss
            if (str == undefined || str == "" || str == null) {
                return "";
            }
            var hasTime = arguments[1] != false ? true : false;//可传第二个参数false，返回yyyy-MM-dd
            var d = new Date(str);
            var year = d.getFullYear();
            var month = (d.getMonth() + 1) < 10 ? '0' + (d.getMonth() + 1) : (d.getMonth() + 1);
            var day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate();
            var hour = d.getHours() < 10 ? '0' + d.getHours() : d.getHours();
            var minute = d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes();
            var second = d.getSeconds() < 10 ? '0' + d.getSeconds() : d.getSeconds();
            if (hasTime) {
                return [year, month, day].join('-') + " " + [hour, minute, second].join(':');
            } else {
                return [year, month, day].join('-');
            }
        }
    </script>

}