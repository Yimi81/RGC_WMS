
@{
    ViewBag.Title = "compPlatform";
}
<link rel="stylesheet" href="/lib/elFinder/lib/jquery-ui/themes/base/all.css" />
<link rel="stylesheet" href="/lib/elFinder/lib/elfinder/css/elfinder.full.css" />
<link rel="stylesheet" href="/lib/elFinder/lib/elfinder/css/theme.css" />
<style>
    input[type="checkbox"] {
        width: 16px;
        height: 16px;
        display: inline-block;
        text-align: center;
        vertical-align: middle;
        line-height: 16px;
        position: relative;
        margin: 8px;
    }

    .avatar {
        width: 200px;
        height: 200px;
        display: block;
    }

    input[type="checkbox"]::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        background: #fff;
        width: 100%;
        height: 100%;
        border: 1px solid #d9d9d9
    }

    input[type="checkbox"]:checked::before {
        content: "\2713";
        background-color: #fff;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        border: 1px solid #6fc469;
        color: #6fc469;
        font-size: 16px;
        font-weight: bold;
    }
</style>
<body class="plr20">
    <div id="compPlatform">
        <!-- 标题和地址 -->
        <el-row>
            <el-col :span="24" class="breadcrumb-container">
                @*<strong class="title">Sku管理</strong>*@
                <el-breadcrumb separator="/">
                    <el-breadcrumb-item><strong>电商管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>竞品信息</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>


        <el-col :span="24" class="toolbar">
            <el-form :inline="true" size="small">
                <el-form-item label="关联产品型号">
                    <el-select v-model="compForm.productId"
                               clearable
                               filterable
                               remote
                               reserve-keyword
                               placeholder="关联产品型号"
                               :remote-method="remoteMethod"
                               :loading="loading">
                        <el-option v-for="item in searchList"
                                   :key="item.id"
                                   :label="item.value"
                                   :value="item.id">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="平台">
                    <el-select v-model="compForm.id" placeholder="请选择平台" clearable>
                        <el-option v-for="item in platformlist"
                                   :key="item.id"
                                   :label="item.eName"
                                   :value="item.id">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="型号和名称">
                    <el-input placeholder="型号和名称" v-model="compForm.key" clearable></el-input>
                </el-form-item>

                <el-form-item>
                    <el-button v-on:click="search" icon="el-icon-search">搜索</el-button>
                </el-form-item>
                <el-form-item>
                    <el-button v-on:click="dialog=true" type="primary" icon="el-icon-plus">添加竞品</el-button>
                </el-form-item>
                <el-form-item>
                    <el-button v-on:click="refreshDictionary" icon="el-icon-finished" type="danger" plain>获取当日零售价</el-button>
                </el-form-item>
            </el-form>
        </el-col>
        @*<span>【{{checkName}}】</span>*@
        <el-table :data="compList" size="small" highlight-current-row v-loading="listLoading" style="width: 100%;margin-top:10px;">
            @*<el-table-column type="index" min-width="60"></el-table-column>*@
            <el-table-column prop="id" label="id" width="50"></el-table-column>
            <el-table-column prop="itemId" label="ItemID" width="80"></el-table-column>
            <el-table-column prop="productId" label="产品Id" width="80"></el-table-column>
            <el-table-column prop="factoryModel" label="型号" min-width="120" sortable></el-table-column>
            <el-table-column min-width="180" prop="name" label="产品名">
            </el-table-column>
            <el-table-column min-width="100" prop="srcFull" label="图片">
                <template slot-scope="scope">
                    <img :src="scope.row.srcFull" class="pimg" alt="no image" v-if="scope.row.srcFull!=''" height="50">
                </template>
            </el-table-column>
            <el-table-column min-width="100" prop="platformName" label="平台名称" sortable>
            </el-table-column>
            <el-table-column min-width="100" prop="retailPriceString" label="当日零售价">
            </el-table-column>
            <el-table-column min-width="50" prop="platformUrl" label="链接">
                <template slot-scope="scope">
                    <el-tooltip class="item" effect="dark" placement="top-start">
                        <div slot="content" style="width:250px">{{scope.row.platformUrl}}
                        </div>
                        <p v-if="scope.row.platformUrl">
                            <el-link :href="scope.row.platformUrl" type="success" target="_blank"><i class="el-icon-paperclip"></i></el-link>
                        </p>

                    </el-tooltip>
                </template>
            </el-table-column>
            <el-table-column min-width="150" prop="remarks" label="备注">
            </el-table-column>
            <el-table-column label="操作" width="150" fixed="right">
                <template slot-scope="scope">
                    <el-dropdown trigger="click" size="small">
                        <el-button size="mini" class="mb5" style="width:100px;">
                            操作
                            <i class="el-icon-caret-bottom el-icon--right"></i>
                        </el-button>
                        <el-dropdown-menu slot="dropdown">
                            <el-dropdown-item>
                                <div v-on:click="openEditcompPlatform(scope.row)">修改信息</div>
                            </el-dropdown-item>
                            <el-dropdown-item>
                                <div v-on:click="deletecomp(scope.row.id)">删除</div>
                            </el-dropdown-item>
                        </el-dropdown-menu>
                    </el-dropdown>
                </template>
            </el-table-column>
        </el-table>
        <!--工具条-->
        <el-col :span="24" class="toolbar">
            <el-pagination v-on:size-change="handleSizeChange" v-on:current-change="handleCurrentChange" :current-page="page" :page-sizes="[10,20,30,40,50]" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total" style="float:right;">
            </el-pagination>
        </el-col>
        <el-drawer title="添加竞品"
                   @*:before-close="handleClose"*@
                   :visible.sync="dialog"
                   direction="rtl"
                   custom-class="demo-drawer"
                   ref="drawer"
                   size="50%">
            <div class="demo-drawer__content">
                <el-form :inline="true" :model="compProduct" ref="compProduct" label-width="200px" class="skuform" label-position="right" size="mini">

                    <div slot="header">
                        <span slot="header" class="step-jump pr" id="sku_baseInfo">
                            <i class="tip-tit"><i class="pr z-in2 pl10">添加竞品</i></i>
                        </span>
                    </div>
                    <el-row>
                        <el-form-item label="Product Name(产品名称)" prop="itemName">
                            <el-input v-model="compProduct.name" type="textarea" :rows="1" :autosize="{ minRows: 2, maxRows: 4}"
                                      placeholder="产品名称" class="w259" />
                        </el-form-item>
                        <el-form-item label="Model(型号)" prop="factoryModel" :rules="[{ required: true, message: '请输入型号', trigger: 'blur' }]">
                            <el-input v-model="compProduct.factoryModel" class="w259"></el-input>
                        </el-form-item>
                        <el-form-item label="Brand(品牌)" prop="factoryModel">
                            <el-input v-model="compProduct.brandName" class="w259"></el-input>
                        </el-form-item>
                        <el-form-item label="平台" prop="platformId">
                            <el-select v-model="compProduct.platformId" placeholder="请选择平台" size="mini" clearable class="w259" disabled>
                                <el-option v-for="item in platformlist"
                                           :key="item.id"
                                           :label="item.ename"
                                           :value="item.id">
                                </el-option>
                            </el-select>
                        </el-form-item>
                    </el-row>
                    <el-row>
                        <el-form-item label="关联产品">
                            <el-row>
                                关联产品Id:{{compProduct.productId}}
                            </el-row>
                            <el-row>
                                关联在售产品Id:{{compProduct.itemId}}
                            </el-row>
                            <el-button v-on:click="openRelate()">关联产品</el-button>
                        </el-form-item>
                        <el-form-item label="唯一标识">
                            <el-input v-model.trim="compProduct.uniqueId" class="w259"></el-input>
                        </el-form-item>
                    </el-row>

                    <el-row>


                        <el-form-item label="平台链接">
                            <el-input v-model="compProduct.platformUrl" type="textarea" :rows="4"
                                      placeholder="产品链接" class="lianjie_textarea w259" />
                        </el-form-item>

                        <el-form-item label="Remark (产品备注)">
                            <el-input v-model="compProduct.remarks" type="textarea" :rows="4"
                                      placeholder="Remark (产品备注)" class="w259" />
                        </el-form-item>
                    </el-row>
                    <el-row>
                        <el-form-item label="Picture(产品示意图) (320*320)" prop="imageMain">
                            <div class="m-t-10 avatar-uploader" v-on:click="openFileManage()">
                                <div class="el-upload el-upload--text">
                                    <img v-if="compMainSrc" :src="compMainSrc" class="avatar">
                                    <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                                </div>
                            </div>
                        </el-form-item>
                    </el-row>

                </el-form>

                <div style="float:right;margin:10px">
                    <el-button v-on:click="dialog = false">取 消</el-button>
                    <el-button type="primary" size="medium" v-on:click="saveComp" v-loading="loading">
                        {{ loading ? '提交中 ...' : '确 定' }}
                        <i class="el-icon-check" style="margin-left:5px;"></i>
                    </el-button>
                </div>
            </div>
            <el-drawer title="在售产品列表"
                       :append-to-body="true"
                       @*:before-close="handleClose"*@
                       :visible.sync="innerDrawer"
                       size="45%">

                <div style="margin:10px">
                    <el-col :span="24" class="toolbar">
                        <el-form :inline="true" size="small">
                            <el-form-item>
                                <el-input placeholder="型号和名称" v-model="itemForm.key" clearable></el-input>
                            </el-form-item>
                            <el-form-item>
                                <el-select v-model="itemForm.id" placeholder="请选择平台" clearable>
                                    <el-option v-for="item in platformlist"
                                               :key="item.id"
                                               :label="item.ename"
                                               :value="item.id">
                                    </el-option>
                                </el-select>
                            </el-form-item>
                            <el-form-item>
                                <el-button v-on:click="searchProduct" icon="el-icon-search">搜索</el-button>
                            </el-form-item>
                        </el-form>
                    </el-col>
                    <el-table :data="itemForm.items" size="small" highlight-current-row v-loading="listLoading" style="width: 100%;margin-top:10px;" height="600">
                        <el-table-column prop="id" label="id" width="50"></el-table-column>
                        <el-table-column prop="productId" label="产品ID" width="80"></el-table-column>
                        <el-table-column prop="factoryModel" label="型号" min-width="120" sortable></el-table-column>
                        <el-table-column min-width="180" prop="itemName" label="产品名">
                        </el-table-column>
                        <el-table-column min-width="100" prop="srcFull" label="图片">
                            <template slot-scope="scope">
                                <img :src="scope.row.srcFull" class="pimg" alt="no image" v-if="scope.row.srcFull!=''" height="50">
                            </template>
                        </el-table-column>
                        <el-table-column min-width="100" prop="platformName" label="平台名称" sortable>
                        </el-table-column>
                        @*<el-table-column min-width="80" prop="status" label="产品状态">
                                <template slot-scope="scope">
                                    <el-tag type="success" v-if="scope.row.status==3" size="mini">正常</el-tag>
                                    <el-tag type="info" v-else size="mini">异常</el-tag>
                                </template>
                            </el-table-column>
                            <el-table-column min-width="80" prop="isValid" label="平台状态">
                                <template slot-scope="scope">
                                    <el-tag type="info" v-if="scope.row.isValid==0" size="mini">失效</el-tag>
                                    <el-tag type="success" v-else size="mini">有效</el-tag>
                                </template>
                            </el-table-column>*@
                        <el-table-column label="操作" width="100" fixed="right">
                            <template slot-scope="scope">
                                <el-button size="mini" class="mb5" v-on:click="chooseProduct(scope.row)" v-if="scope.row.id!=compProduct.itemId">
                                    选择
                                </el-button>
                                <p v-else style="color:red">已选择</p>
                            </template>
                        </el-table-column>
                    </el-table>
                    <el-col :span="24" class="toolbar">
                        <el-pagination v-on:size-change="handleSizeChange2" v-on:current-change="handleCurrentChange2" :current-page="page2" :page-sizes="[10,20,30,40,50]" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total2" style="float:right;">
                        </el-pagination>
                    </el-col>
                </div>
            </el-drawer>

        </el-drawer>
        <el-dialog title="附件 Attachment" :visible.sync="fileManageVisable" :close-on-click-modal="false" top="5%" width="1000px">
            <div ref="elfinder" id="elfinder"></div>
            <span slot="footer" class="dialog- footer" style="display:block;text-align: center;margin-top: 20px">
                <el-button type="primary" v-on:click="saveCompMainUrl">设为预览图</el-button>
            </span>
        </el-dialog>
    </div>
    <script src="/lib/elFinder/lib/jquery-ui/jquery-ui.min.js"></script>
    <script src="/lib/elFinder/lib/elfinder/js/elfinder.full.js"></script>
    <script src="/lib/elFinder/lib/elfinder/js/i18n/elfinder.zh_CN.js"></script>
    <script>
        var Main = {
            data() {
                return {
                    compProduct: {
                        status: 0,
                        name: void 0,
                        factoryModel: void 0,
                        brandName: void 0,
                        remarks: void 0,
                        src: void 0,
                        platformId: void 0,
                        imageMain: void 0,
                        productId: 0,
                        uniqueId: void 0,
                        platformUrl: void 0,
                        itemId: 0,
                        id: 0,
                    },
                    compMainSrc: void 0,
                    categoryIds: [],
                    cascader: [],
                    platformlist: [],
                    statuslist: [
                        {
                            label: '有效',
                            id: 0
                        },
                        {
                            label: '失效',
                            id: 1
                        },
                    ],
                    platformSkuList: [],
                    defaultProps: {
                        children: 'child',
                        label: 'ename'
                    },
                    fileManageVisable: false,
                    dialog: false,
                    innerDrawer: false,
                    editcompPlatformVisible: false,
                    editSkuPriceVisible: false,
                    /*==编辑界面==*/
                    editFormVisible: false,//是 否显示
                    editLoading: false,
                    editFormRules: {
                        platformSkuUrl: [
                            { required: true, message: '请输入链接', trigger: 'blur' }
                        ],
                        // cname:[{ required: true, message: '请输入中文名称', trigger: 'blur' }]
                    },
                    editForm: {
                        id: '',
                        ename: '',
                        cname: '',
                        isAPI: false,
                        isPython: false,
                    },
                    compPlatformForm: {
                        id: 0,
                        skuId: 0,
                        itemName: void 0,
                        factoryModel: void 0,
                        platformId: 0,
                        platformSkuUrl: '',
                        wholeSalePriceString: '0.00',
                        retailPriceString: '0.00',
                        asinId: '',
                        isValid: true,
                        walmartSkuId: void 0,
                        ebayItemId: void 0,
                    },
                    itemPriceForm: {
                        id: 0,
                        skuId: 0,
                        itemName: void 0,
                        factoryModel: void 0,
                        platformId: 0,
                        platformName: '',
                        wholeSalePriceString: '0.00',
                        retailPriceString: '0.00',

                    },
                    srcFull: '',
                    //分页
                    total: 0,
                    total2: 0,
                    page: 1,
                    page2: 1,
                    pageSize: 10,

                    //商品界面
                    items: [],
                    checkName: '未选中平台',
                    listLoading: false,
                    skuListLoading: false,
                    skuFormVisible: false,
                    itemForm: {
                        items: [],
                        id: '',
                        itemId: 0,
                        productId: void 0,
                        status: '',
                        classCode: '',
                        check: '',
                        key: ''
                    },
                    compForm: {
                        items: [],
                        id: '',
                        itemId: 0,
                        productId: void 0,
                        status: '',
                        classCode: '',
                        check: '',
                        key: ''
                    },
                    platformForm: {
                        items: [],
                        id: '',
                        classCode: '',
                        check: ''
                    },
                    filters: {
                        searchKey: "",
                        isChanged: 0
                    },
                    platformId: void 0,
                    compList: [],
                    searchList: [],
                    searchAllList: [],
                    compVisible: false,
                    compLoading: false,
                    loading: false,
                }
            },
            methods: {
                openFileManage() {
                    this.fileManageVisable = true;
                    //selectedFilePath = '';
                    setTimeout(() => {
                        this.fileManageInitial();
                    }, 0)
                },
                saveCompMainUrl() {
                    //console.log(this.mainSrc);
                    if (selectedFilePath != undefined && selectedFilePath != "") {
                        this.compProduct.imageMain = selectedFilePath;
                        //document.getElementById("mainSrc").src = mainSrc;
                        this.compMainSrc = previewSrc;
                        this.fileManageVisable = false;
                    } else {
                        this.$message({
                            type: 'error',
                            message: '请选择图片'
                        });
                    }
                },
                fileManageInitial() {
                    var _self = this;
                    var myCommands = elFinder.prototype._options.commands;
                    var disabled = ['callback', 'chmod', 'editor', 'netmount', 'ping',  'zipdl', 'help']; // Not yet implemented commands in elFinder.NetCore
                    elFinder.prototype.i18.en.messages.TextArea = "Edit";

                    $.each(disabled, function (i, cmd) {
                        (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);
                    });

                    var options = {
                        url: '/item/connector', // Default (Local File System)
        @*//customData: { folder: '@Model.Folder', subFolder: '@Model.SubFolder' }, // customData passed in every request to the connector as query strings. These values are used in FileController's Index method.*@
                        rememberLastDir: false, // Prevent elFinder saving in the Browser LocalStorage the last visited directory
                        commands: myCommands,
                        lang: 'zh_CN', // elFinder supports UI and messages localization. Check the folder Content\elfinder\js\i18n for all available languages. Be sure to include the corresponding .js file(s) in the JavaScript bundle.
                        uiOptions: { // UI buttons available to the user
                            toolbar: [
                                ['back', 'forward'],
                                ['reload'],
                                ['home', 'up'],
                                ['mkdir', 'mkfile', 'upload'],
                                ['open', 'download'],
                                ['undo', 'redo'],
                                ['info'],
                                ['quicklook'],
                                ['copy', 'cut', 'paste'],
                                ['rm'],
                                ['duplicate', 'rename', 'edit'],
                                ['selectall', 'selectnone', 'selectinvert'],
                                ['view', 'sort'],
                                ['search'],
                            ]

                        }, handlers: {
                            select: function (event, elfinderInstance) {
                                if (event.data.selected.length == 1) {
                                    var item = $('#' + event.data.selected[0]);
                                    if (!item.hasClass('directory')) {
                                        selectedFile = event.data.selected[0];
                                        previewSrc = "/item/connector?cmd=file&target=" + selectedFile + "&_t=" + event.timeStamp;

                                        $.ajax({
                                            type: 'post',
                                            url: '/item/selectFile',
                                            data: { target: selectedFile },
                                            success: function (data) {
                                                selectedFilePath = data;
                                            },
                                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                                if (errorThrown == "Unauthorized") {
                                                    window.parent.MainIndex.openLoginFrom();
                                                    _self.$message({
                                                        type: 'error',
                                                        message: XMLHttpRequest.responseJSON.msg
                                                    });
                                                } else {
                                                    _self.$message({
                                                        type: 'error',
                                                        message: errorThrown
                                                    });
                                                }
                                            }
                                        });
                                        return;
                                    }
                                }
                                selectedFile = null;
                            }
                        }

                    };
                    $('#elfinder').elfinder(options).elfinder('instance');
                },
                searchProduct() {
                    this.page2 = 1;

                    this.getItemIncludeList();

                },

                chooseProduct(row) {
                    this.compProduct.productId = row.productId;
                    this.compProduct.itemId = row.id;
                    this.compProduct.platformId = row.platformId;
                    this.innerDrawer = false;
                },
                openRelate() {
                    this.innerDrawer = true;
                    this.getItemIncludeList();
                },
                handleCurrentChange2(val) {
                    this.page2 = val;
                    this.getItemIncludeList();
                },
                handleSizeChange2(val) {
                    this.pageSize = val;
                    this.getItemIncludeList();
                },
                saveComp() {
                    var _self = this;
                    console.log(_self.compProduct)
                    var _valid = false;
                    this.$refs['compProduct'].validate((valid) => {
                        if (valid) {
                            _valid = true;
                        }
                    });
                    if (!_valid) {
                        return false;
                    }
                    _self.compProduct.id =  0
                    _self.loading=true
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        url: '../../rest/competition/add',
                        data: JSON.stringify(_self.compProduct),
                        success: function (data) {
                            if (data.success) {
                                _self.$message({
                                    type: 'success',
                                    message: '成功!'
                                });
                                _self.clear()
                                _self.getCompList();
                                _self.dialog = false;
                            }
                            else {
                                _self.$message({
                                    type: 'error',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                        complete(){
                            _self.loading=false;
                        }
                    });
                },
                getItemIncludeList() {
                    var _self = this;
                    var id = 0;
                    if (!_self.itemForm.id > 0) {
                        id = 0
                    } else {
                        id = _self.itemForm.id;
                    }
                    _self.listLoading = true;
                    $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        url: '../../rest/item/list',
                        data: { platformId: id, key: _self.itemForm.key, pageSize: _self.pageSize, currentPage: _self.page2, uniqueId: "", status: _self.itemForm.status },
                        success: function (data) {
                            if (data.success == true) {
                                _self.total2 = data.data.page.totalCount;
                                _self.itemForm.items = data.data.list;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                    complete(){
                        _self.listLoading = false;
                    }
                    });
                },
                getSearchAll() {
                    var _self = this;
                    $.ajax({
                        type: 'get',
                        //dataType: 'json',
                        //contentType: 'application/json',
                        url: '/rest/item/competition/search/list',
                        //data: JSON.stringify(_self.filters),
                        data: _self.filters.searchKey,
                        success: function (data) {
                            _self.searchAllList = data.data;
                            _self.listLoading = false;
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                remoteMethod(query) {
                    if (query !== '') {
                        this.loading = true;
                        setTimeout(() => {
                            this.loading = false;
                            this.searchList = this.searchAllList.filter(item => {
                                return item.value != null ? item.value.toLowerCase()
                                    .indexOf(query.toLowerCase()) > -1 : [];
                            });
                        }, 200);
                    } else {
                        this.searchList = [];
                    }
                },
                getCompList() {
                    this.listLoading = true;
                    var _self = this;
                    var id = 0;
                    if (!_self.compForm.id > 0) {
                        id = 0
                    } else {
                        id = _self.compForm.id;
                    }
                    var itemId = 0;
                    if (!_self.compForm.itemId > 0) {
                        itemId = 0
                    } else {
                        itemId = _self.compForm.itemId;
                    } var productId = 0;
                    if (!_self.compForm.productId > 0) {
                        productId = 0
                    } else {
                        productId = _self.compForm.productId;
                    }
                    $.ajax({
                        type: 'POST',
                         dataType: 'json',
                         contentType: 'application/json',
                        url: '/rest/item/competition/page/query',
                        data: JSON.stringify({ platformId: id, searchKey: _self.compForm.key, pageSize: _self.pageSize, currentPage: _self.page, itemId: itemId, productId: productId, status: 0 }),
                        success: function (data) {
                            if (data.success == true) {
                                _self.compList = data.data;
                                _self.total = data.page.totalCount;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                            _self.listLoading = false;

                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            _self.listLoading = false;

                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                        complete() {
                            _self.listLoading = false;
                        }
                    });
                },
                refreshDictionary() {
                    var _self = this;
                    $.ajax({
                        type: 'GET',
                        url: '../../rest/competition/refresh',
                        success: function (data) {
                            if (data.code == 0) {
                                //_self.$message({
                                //    type: 'success',
                                //    message: '操作成功!',
                                //});
                                _self.getCompList();

                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                //改变每页显示数据条数
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getCompList();
                },
                addItem() {
                    window.parent.MainIndex.addTabByIframe("在售产品添加", "/Item/Add", "在售产品添加");
                },
                addSku() {
                    this.page = 1;
                    this.getSkuExludeList();
                },
                search() {
                    this.page = 1;

                    this.getCompList();

                },
                rowChoose(row, event, column) {
                    this.compForm.id = row.id;
                    this.getCompList();
                    this.checkName = row.ename;
                },
                seeMore(row) {
                    this.compForm.id = row.id;
                    this.getCompList();
                    this.checkName = row.ename;
                },
                handleCurrentChange3(val) {
                    this.page3 = val;
                    this.GetPlatformList();
                },
                handleCurrentChange4(val) {
                    this.page4 = val;
                    this.getPlatformIncludeList();
                },
                openEditcompPlatform(row) {
                    window.parent.MainIndex.addTabByIframe("竞品详情_" + row.id, "/Item/CompDetail?compId=" + row.id, "竞品详情");
                },
                openEditSkuPrice(row) {
                    var _self = this;
                    _self.editSkuPriceVisible = true;
                    //console.log(row)
                    _self.itemPriceForm.id = row.id;
                    _self.itemPriceForm.itemName = row.itemName;
                    _self.itemPriceForm.factoryModel = row.factoryModel;
                    _self.itemPriceForm.platformName = row.platformName;
                    _self.itemPriceForm.wholeSalePriceString = row.wholeSalePriceString;
                    _self.itemPriceForm.retailPriceString = row.retailPriceString;


                },
                handleSuccess(res, file, fileList) {
                    var _self = this;
                    var url = URL.createObjectURL(file.raw);
                    _self.editForm.srcFull = url;
                    _self.srcFull = url;
                    var reader = new FileReader();
                    reader.readAsDataURL(file.raw);
                    reader.onload = function (e) {
                        _self.editForm.byteStr = e.target.result;

                    };
                },
                //【获取平台列表】
                GetPlatformList() {
                    var _self = this;
                    $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        url: '/rest/item/platform/list',
                        success: function (data) {
                            if (data.success == true) {
                                _self.platformlist = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == "Unauthorized") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                handleCurrentChange(val) {
                    this.page = val;
                    this.getCompList();
                },
                deletecomp(id) {
                    var _self = this;
                    this.$confirm("确定删除该竞品吗", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            dataType: 'json',
                            url: '../../rest/competition/delete',
                            data: { id: id },
                            success: function (data) {
                                if (data.success) {
                                    _self.$message({
                                        type: 'success',
                                        message: '删除成功!'
                                    });

                                    _self.getCompList();
                                }
                                else {
                                    _self.$message({
                                        type: 'error',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                if (errorThrown == "Unauthorized") {
                                    window.parent.MainIndex.openLoginFrom();
                                    _self.$message({
                                        type: 'error',
                                        message: XMLHttpRequest.responseJSON.msg
                                    });
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: errorThrown
                                    });
                                }
                            }
                        });
                    }).catch(() => {

                    });
                },
                clear() {
                    var _self = this;
                    //清空缓存
                    _self.compProduct= {
                        status: 0,
                        name: void 0,
                        factoryModel: void 0,
                        brandName: void 0,
                        remarks: void 0,
                        src: void 0,
                        platformId: void 0,
                        imageMain: void 0,
                        productId: 0,
                        uniqueId: void 0,
                        platformUrl: void 0,
                        itemId: void 0,
                        id: 0,
                    }
                    _self.compMainSrc = ""
                },

            },
            mounted() {
                this.GetPlatformList();
                //this.getCompList();
                // this.refreshDictionary();
                this.getCompList();
                this.getSearchAll();
                this.listLoading = true;
            }
        }
        var Ctor = Vue.extend(Main);
        new Ctor().$mount('#compPlatform');
    </script>

</body>
