#pragma checksum "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Item\ItemPriceRecord.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a94a7f9a486c009b13116dfbd4047aba80df21c8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Item_ItemPriceRecord), @"mvc.1.0.view", @"/Views/Item/ItemPriceRecord.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a94a7f9a486c009b13116dfbd4047aba80df21c8", @"/Views/Item/ItemPriceRecord.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"804fc8bd0ed383ec8f2a14309e921cbb1975ce29", @"/Views/_ViewImports.cshtml")]
    public class Views_Item_ItemPriceRecord : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("plr20"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Item\ItemPriceRecord.cshtml"
  
    /**/

    ViewBag.Title = "List";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a94a7f9a486c009b13116dfbd4047aba80df21c83694", async() => {
                WriteLiteral("\r\n    <div id=\"skulist\">\r\n        <!-- 标题和地址 -->\r\n        <el-row>\r\n            <el-col :span=\"24\" class=\"breadcrumb-container\">\r\n");
                WriteLiteral(@"                <el-breadcrumb separator=""/"">
                    <el-breadcrumb-item><strong>电商管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>平台在售产品改价记录</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>

        <article class=""administration-tenant-container"">
            <!--搜索-->
            <el-col :span=""24"" class=""toolbar"">
                <el-form :inline=""true"" size=""small"" :model=""filters"" v-on:submit.native.prevent>
                    <el-form-item>
                        <el-input placeholder=""产品名"" v-model=""filters.searchKey""
                                  v-on:keyup.enter.native=""getItemPriceRecordList()"" clearable></el-input>
                    </el-form-item>

                    <el-form-item>
                        <el-select v-model=""filters.platformId"" placeholder=""请选择平台"" clearable>
                            <el-option v-for=""item in platformlist""
                                       :key=""it");
                WriteLiteral(@"em.id""
                                       :label=""item.eName""
                                       :value=""item.id"">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item>
                        <el-button v-on:click=""search"" icon=""el-icon-search"">搜索</el-button>
                    </el-form-item>
                </el-form>
            </el-col>

            <el-table class=""data-table"" v-loading=""listLoading"" :data=""itemPriceList"" :fit=""true"" border size=""mini"">
                <el-table-column prop=""id"" label=""id"" width=""80"" fixed=""left""></el-table-column>
                <el-table-column prop=""itemId"" label=""itemId"" min-width=""80"" fixed=""left""></el-table-column>
");
                WriteLiteral(@"                <el-table-column prop=""factoryModel"" label=""工厂型号"" min-width=""80"" fixed=""left""></el-table-column>
                <el-table-column min-width=""180"" prop=""itemName"" label=""产品名"">
                </el-table-column>
                <el-table-column min-width=""100"" prop=""srcFull"" label=""图片"">
                    <template slot-scope=""scope"">
                        <img :src=""scope.row.srcFull"" class=""pimg"" alt=""no image"" v-if=""scope.row.srcFull!=''"" height=""50"">
                    </template>
                </el-table-column>
                <el-table-column min-width=""90"" prop=""platformName"" label=""平台名称"">
                </el-table-column>
                <el-table-column min-width=""60"" prop=""wholeSalePriceString"" label=""批发价"">
                    <template slot-scope=""scope"">
                        <i v-if=""scope.row.platformId==10"">-</i>
                        <i v-else>{{scope.row.wholeSalePriceString}}</i>
                    </template>
                </el-table-column>
    ");
                WriteLiteral(@"            <el-table-column min-width=""60"" prop=""retailPriceString"" label=""零售价"">
                    <template slot-scope=""scope"">
                        <i v-if=""scope.row.platformId!=10"">-</i>
                        <i v-else>{{scope.row.retailPriceString}}</i>
                    </template>
                </el-table-column>
                <el-table-column width=""120"" prop=""validTimeString"" label=""生效时间"">
                    <template slot-scope=""scope"">
                        <i v-if=""scope.row.platformId!=10"">-</i>
                        <i v-else>{{scope.row.validTimeString}}</i>
                    </template>
                </el-table-column>

                <el-table-column width=""140"" prop=""creationTimeString"" label=""改价时间"">
                    <template slot-scope=""scope"">
                        <i>{{scope.row.creationTimeString}}</i>
                    </template>
                </el-table-column>
                <el-table-column min-width=""60"" prop=""creationUserName"" l");
                WriteLiteral(@"abel=""改价人"">
                    <template slot-scope=""scope"">
                        <i>{{scope.row.creationUserName }}</i>
                    </template>
                </el-table-column>
                <el-table-column prop=""status"" label=""状态"" width=""100"">
                    <template slot-scope=""scope"">
                        <div v-if=""scope.row.platformId==10"">
                            <el-tag v-if=""scope.row.status == 0"" type=""success"">审核通过</el-tag>
                            <el-tag v-if=""scope.row.status == 1"" type=""info"">待审核</el-tag>
                            <el-tag v-if=""scope.row.status == 2"" type=""danger"">审核不通过</el-tag>
                        </div>
                        <i v-if=""scope.row.platformId!=10"">-</i>
                    </template>
                </el-table-column>
                <el-table-column prop=""level"" label=""下发级别"" width=""70"">
                    <template slot-scope=""scope"">
                        <div v-if=""scope.row.platformId==10"">
       ");
                WriteLiteral(@"                     <i class=""el-icon-success"" v-if=""scope.row.level == 0"" title=""正常"" style=""color:forestgreen;font-size:16px""></i>
                            <i class=""el-icon-warning"" v-if=""scope.row.level == 1"" title=""紧急"" style=""color:red;font-size:16px""></i>
                        </div>
                        <i v-if=""scope.row.platformId!=10"">-</i>
                    </template>
                </el-table-column>
                <el-table-column prop=""isSync"" label=""同步状态"" width=""70"">
                    <template slot-scope=""scope"">
                        <div v-if=""scope.row.platformId==10"">
                            <i class=""el-icon-check"" v-if=""scope.row.isSync == 1"" title=""已同步"" style=""color:forestgreen;font-size:16px""></i>
                            <i class=""el-icon-loading"" v-if=""scope.row.isSync == 0"" title=""等待同步"" style=""color:orangered;font-size:16px""></i>
                        </div>
                        <i v-if=""scope.row.platformId!=10"">-</i>
                    </");
                WriteLiteral(@"template>
                </el-table-column>
                <el-table-column width=""140"" prop=""requestSyncTimeString"" label=""同步时间"">
                    <template slot-scope=""scope"">
                        <i>{{scope.row.requestSyncTimeString}}</i>
                    </template>
                </el-table-column>
                <el-table-column width=""130"" label=""操作"" fixed=""right"">
                    <template slot-scope=""scope"">
");
                WriteLiteral(@"                        <el-dropdown trigger=""click"" v-if=""scope.row.status!=0"">
                            <el-button type=""warning"" plain size=""mini"" class=""mb5"">
                                状态维护
                                <i class=""el-icon-caret-bottom el-icon--right""></i>
                            </el-button>
                            <el-dropdown-menu slot=""dropdown"">
                                <el-dropdown-item>
                                    <div v-on:click=""updatePriceStatus(scope.$index, scope.row.id, 0)"">审核通过</div>
                                </el-dropdown-item>
                                <el-dropdown-item>
                                    <div v-on:click=""updatePriceStatus(scope.$index, scope.row.id, 2)"">审核不通过</div>
                                </el-dropdown-item>

                            </el-dropdown-menu>
                        </el-dropdown>
                        <el-button v-if=""!scope.row.isSync&&scope.row.platformId==10&&scope.row");
                WriteLiteral(@".status == 0"" plain size=""mini"" class=""mb5"" v-on:click=""syncItemPrice(scope.$index, scope.row.id,scope.row.retailPriceString,scope.row.validTimeString)"">
                            下发价格
                            <i class=""el-icon-sort""></i>
                        </el-button>
");
                WriteLiteral(@"                    </template>
                </el-table-column>
            </el-table>
            <el-col :span=""24"" class=""toolbar"">
                <el-pagination v-on:size-change=""handleSizeChange"" v-on:current-change=""handleCurrentChange"" :current-page=""page"" :page-sizes=""[10,20,30,40,50]"" :page-size=""pageSize"" layout=""total, sizes, prev, pager, next, jumper"" :total=""total"" style=""float:right;"">
                </el-pagination>
            </el-col>
        </article>
    </div>
    <script>
        var Main = {
            data() {
                return {
                    listLoading: false,
                    itemPriceList: [],
                    platformlist: [],
                    filters: {
                        searchKey: """",
                        platformId: void 0
                    },
                    total: 30,
                    page: 1,
                    pageSize: 10,
                }
            },
            created() {
                this.");
                WriteLiteral(@"GetPlatformList();
                this.getItemPriceRecordList();
            },
            methods: {
                syncItemPrice(index, itemId, prePrice, validTime) {
                    var _self = this;
                    $.ajax({
                        type: 'get',
                        url: '/rest/item/price/sync',
                        data: { itemId: itemId, preRetailPrice: prePrice, validTimeString: validTime },
                        success: function (data) {
                            if (data.success == true) {
                                _self.$notify.success({
                                    title: '成功',
                                    message: ""价格下发成功""
                                });
                                _self.itemPriceList[index].isSync = 1;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
  ");
                WriteLiteral(@"                              });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                        complete() {
                        }
                    });
                },
                //【获取平台列表】
                GetPlatformList() {
                   ");
                WriteLiteral(@" var _self = this;
                    $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        async: false,
                        url: '/rest/item/platform/list',
                        success: function (data) {
                            if (data.success == true) {
                                _self.platformlist = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
 ");
                WriteLiteral(@"                                   message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                // 改变每页显示几条数据
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getItemPriceRecordList();
                },
                //【点击第几页】
                handleCurrentChange(val) {
                    this.page = val;
                    this.getItemPriceRecordList();
                },

                getItemPriceRecordList() {
                    this.listLoading = true;
                    var _self = this;
                    var platformId = 0;
                    if (_self.fil");
                WriteLiteral(@"ters.platformId != null && _self.filters.platformId != '') {
                        //alert(111)
                        platformId = _self.filters.platformId
                    }
                    $.ajax({
                        type: 'GET',
                        url: '/rest/item/price/record/list',
                        async: false,
                        data: { key: _self.filters.searchKey, platformId: platformId, itemId: '', pageSize: _self.pageSize, currentPage: _self.page },
                        success: function (data) {
                            if (data.success == true) {
                                _self.total = data.page.totalCount;
                                _self.itemPriceList = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
       ");
                WriteLiteral(@"                 },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                        complete() {
                            _self.listLoading = false;
                        }
                    });
                },
                search() {
                    this.getItemPriceRecordList();
                },
 ");
                WriteLiteral(@"               updatePriceStatus(index, id, status) {
                    var _self = this;
                    this.$confirm(""确定修改状态吗"", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            url: '/rest/item/price/status/update',
                            data: { id: id, status: status },
                            success: function (data) {
                                if (data.success == true) {
                                    _self.itemPriceList[index].status = status;
                                    _self.$notify.success({
                                        title: '成功',
                                        message: ""更新状态成功""
                                    });
                                } else {
                                    _self.$notify.error({
                                        title: '错误',
                       ");
                WriteLiteral(@"                 message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                if (errorThrown == ""Unauthorized"") {
                                    window.parent.MainIndex.openLoginFrom();
                                    _self.$message({
                                        type: 'error',
                                        message: XMLHttpRequest.responseJSON.msg
                                    });
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: errorThrown
                                    });
                                }
                            }
                        });
                    }).catch(() => {

                    ");
                WriteLiteral("});\r\n                },\r\n            }\r\n        }\r\n        var Ctor = Vue.extend(Main)\r\n        new Ctor().$mount(\'#skulist\')\r\n    </script>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
