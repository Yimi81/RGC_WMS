#pragma checksum "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Product\Recycle.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "63a1785f4da05a61a2ea942a9eaf48ac19422f62"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_Recycle), @"mvc.1.0.view", @"/Views/Product/Recycle.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"63a1785f4da05a61a2ea942a9eaf48ac19422f62", @"/Views/Product/Recycle.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"804fc8bd0ed383ec8f2a14309e921cbb1975ce29", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_Recycle : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("plr20"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Product\Recycle.cshtml"
  
    ViewData["Title"] = "Recycle";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "63a1785f4da05a61a2ea942a9eaf48ac19422f623659", async() => {
                WriteLiteral(@"
    <div id=""productlist"">
        <!-- 标题和地址 -->
        <el-row>
            <el-col :span=""24"" class=""breadcrumb-container"">
                <el-breadcrumb separator=""/"">
                    <el-breadcrumb-item><strong>产品管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>回收站</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>
        <article class=""administration-tenant-container"">
            <el-tabs v-model=""activeName"" type=""card"">
                <el-tab-pane label=""产品回收站"" name=""first"">
                    <!--搜索-->
                    <el-col :span=""24"" class=""toolbar"">
                        <el-form :inline=""true"" size=""small"" :model=""filters"">
                            <el-form-item>
                                <el-input placeholder=""搜索"" v-model=""filters.searchKey""
                                          v-on:keyup.enter.native=""getProductList()"" clearable></el-input>
                            </el-for");
                WriteLiteral(@"m-item>
                            <el-form-item>
                                <el-button v-on:click=""search"" icon=""el-icon-search"">搜索</el-button>
                            </el-form-item>
                        </el-form>
                    </el-col>
                    <el-table class=""data-table"" size=""small"" v-loading=""listLoading"" :data=""productList"" :fit=""true"" border>
                        <el-table-column min-width=""50"" prop=""id"" label=""ID"">
                            <template slot-scope=""scope"">
                                <i>{{scope.row.id}}</i>
                            </template>
                        </el-table-column>
                        <el-table-column min-width=""200"" prop=""fullEName"" label=""产品名"">
                        </el-table-column>
                        <el-table-column width=""120"" label=""图片"" align=""center"">
                            <template slot-scope=""scope1"">
                                <img v-if=""scope1.row.primaryImageSrcFull"" cla");
                WriteLiteral(@"ss=""pimg"" alt=""no image"" :src=""scope1.row.primaryImageSrcFull"" height=""50"">
                            </template>
                        </el-table-column>
                        <el-table-column prop=""status"" label=""状态"" width=""130"">
                            <template slot-scope=""scope"">
                                <el-tag size=""small"" v-if=""scope.row.status == 0"">录入中</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 1"" type=""info"">待审核</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 2"" type=""danger"">审核不通过</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 3"" type=""success"">正常</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 7"" type=""info"">冻结</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 8"" type=""info"">淘汰</el-tag>
");
                WriteLiteral(@"                            </template>
                        </el-table-column>
                        <el-table-column min-width=""80"" prop=""Category.eName"" label=""分类"">
                        </el-table-column>
                        <el-table-column min-width=""80"" prop=""factoryModel"" label=""工厂型号"">
                        </el-table-column>
                        <el-table-column width=""150"" prop=""lastModificationTimeString"" label=""上次修改时间"">
                        </el-table-column>
                        <el-table-column min-width=""60"" prop=""createUser"" label=""创建人"">
                        </el-table-column>
                    </el-table>
                    <el-col :span=""24"" class=""toolbar"">
                        <el-pagination v-on:size-change=""handleSizeChange"" v-on:current-change=""handleCurrentChange"" :current-page=""page"" :page-sizes=""[10,20,30,40,50]"" :page-size=""pageSize"" layout=""total, sizes, prev, pager, next, jumper"" :total=""total"" style=""float:right;"">
                     ");
                WriteLiteral(@"   </el-pagination>
                    </el-col>
                </el-tab-pane>
                <el-tab-pane label=""Sku回收站"" name=""second"">
                    <el-col :span=""24"" class=""toolbar"">
                        <el-form :inline=""true"" size=""small"" :model=""filtersSku"">
                            <el-form-item>
                                <el-input placeholder=""搜索"" v-model=""filtersSku.searchKey""
                                          v-on:keyup.enter.native=""getSkuList()"" clearable></el-input>
                            </el-form-item>
                            <el-form-item>
                                <el-button v-on:click=""searchSku"" icon=""el-icon-search"">搜索</el-button>
                            </el-form-item>
                        </el-form>
                    </el-col>
                    <el-table class=""data-table"" size=""small"" v-loading=""listLoading"" :data=""skuList"" :fit=""true"" border>
                        <el-table-column min-width=""50"" prop=""id"" label=""");
                WriteLiteral(@"ID"">
                            <template slot-scope=""scope"">
                                <i>{{scope.row.id}}</i>
                            </template>
                        </el-table-column>
                        <el-table-column min-width=""200"" prop=""fullEName"" label=""产品名"">
                        </el-table-column>
                        <el-table-column width=""120"" label=""图片"" align=""center"">
                            <template slot-scope=""scope1"">
                                <img v-if=""scope1.row.primaryImageSrcFull"" class=""pimg"" alt=""no image"" :src=""scope1.row.primaryImageSrcFull"" height=""50"">
                            </template>
                        </el-table-column>
                        <el-table-column prop=""status"" label=""状态"" width=""130"">
                            <template slot-scope=""scope"">
                                <el-tag size=""small"" v-if=""scope.row.status == 0"">录入中</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.");
                WriteLiteral(@"status == 1"" type=""info"">待审核</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 2"" type=""danger"">审核不通过</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 3"" type=""success"">正常</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 7"" type=""info"">冻结</el-tag>
                                <el-tag size=""small"" v-if=""scope.row.status == 8"" type=""info"">淘汰</el-tag>
                            </template>
                        </el-table-column>
                        <el-table-column min-width=""80"" prop=""Category.eName"" label=""分类"">
                        </el-table-column>
                        <el-table-column min-width=""80"" prop=""factoryModel"" label=""工厂型号"">
                        </el-table-column>
                        <el-table-column width=""150"" prop=""LastModificationTimeString"" label=""上次修改时间"">
                        </el-table-column>
                        <el-table-column min-w");
                WriteLiteral(@"idth=""60"" prop=""createUser"" label=""创建人"">
                        </el-table-column>
                    </el-table>
                    <el-col :span=""24"" class=""toolbar"">
                        <el-pagination v-on:size-change=""handleSizeChangeSku"" v-on:current-change=""handleCurrentChangeSku"" :current-page=""pageSku"" :page-sizes=""[10,20,30,40,50]"" :page-size=""pageSizeSku"" layout=""total, sizes, prev, pager, next, jumper"" :total=""totalSku"" style=""float:right;"">
                        </el-pagination>
                    </el-col>
                </el-tab-pane>
            </el-tabs>

        </article>
    </div>
    <script>
        var Main = {
            data() {
                return {
                    activeName: 'first',
                    listLoading: false,
                    productList: [],
                    skuList: [],
                    filters: {
                        searchKey: """",
                        isChanged: 0
                    },
                   ");
                WriteLiteral(@" filtersSku: {
                        searchKey: """",
                        isChanged: 0
                    },
                    total: 30,
                    page: 1,
                    pageSize: 10,
                    totalSku: 30,
                    pageSku: 1,
                    pageSizeSku: 10,
                    listLoading: false,
                }
            },
            created() {
                this.getProductList();
                this.getSkuList();
            },
            methods: {
                // 改变每页显示几条数据
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getProductList();
                },
                //【点击第几页】
                handleCurrentChange(val) {
                    this.page = val;
                    this.getProductList();
                },
                getProductList() {
                    this.listLoading = true;
                    var _self = this;
              ");
                WriteLiteral(@"       var categoryID = 0;
                    $.ajax({
                        type: 'GET',
                        url: '/rest/product/recycle',
                        data: { key: _self.filters.searchKey, categoryId: categoryID, pageSize: _self.pageSize, currentPage: _self.page },
                        success: function (data) {
                            if (data.success == true) {
                                _self.total = data.page.totalCount;
                                _self.productList = data.data;
                                _self.listLoading = false;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unau");
                WriteLiteral(@"thorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                search() {
                    this.getProductList();
                },
                handleSizeChangeSku(val) {
                    this.pageSizeSku = val;
                    this.getSkuList();
                },
                //【点击第几页】
                handleCurrentChangeSku(val) {
                    this.pageSku = val;
                    this.");
                WriteLiteral(@"getSkuList();
                },
                getSkuList() {
                    this.listLoading = true;
                    var _self = this;
                    var categoryID = 0;
                    $.ajax({
                        type: 'GET',
                        url: '/rest/sku/recycle',
                        data: { key: _self.filters.searchKey, categoryId: categoryID, pageSize: _self.pageSize, currentPage: _self.page },
                        success: function (data) {
                            if (data.success == true) {
                                _self.totalSku = data.page.totalCount;
                                _self.skuList = data.data;
                                _self.listLoading = false;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
     ");
                WriteLiteral(@"                   },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                searchSku() {
                    this.getSkuList();
                }
            }
        }
        var Ctor = Vue.extend(Main)
        new Ctor().$mount('#productlist')
    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
