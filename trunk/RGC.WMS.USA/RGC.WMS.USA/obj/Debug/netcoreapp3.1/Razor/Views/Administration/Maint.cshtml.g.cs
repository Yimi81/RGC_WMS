#pragma checksum "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Administration\Maint.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4586468d1d784c9101b0ad013af0d23517f29a11"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Administration_Maint), @"mvc.1.0.view", @"/Views/Administration/Maint.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4586468d1d784c9101b0ad013af0d23517f29a11", @"/Views/Administration/Maint.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"804fc8bd0ed383ec8f2a14309e921cbb1975ce29", @"/Views/_ViewImports.cshtml")]
    public class Views_Administration_Maint : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("plr20"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Administration\Maint.cshtml"
  
    ViewData["Title"] = "Maint";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4586468d1d784c9101b0ad013af0d23517f29a113687", async() => {
                WriteLiteral(@"
    <div id=""maint"">
        <!-- 标题和地址 -->
        <el-row>
            <el-col :span=""24"" class=""breadcrumb-container"">
                <el-breadcrumb separator=""/"">
                    <el-breadcrumb-item><strong>系统管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>日常维护</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>
        <template>
            <article class=""administration-maintenance-container"" v-loading=""loading"">
                <el-tabs v-model=""activeName"">
                    <!-- 基本信息 -->
                    <el-tab-pane label=""静态变量"" name=""first"">
                        <el-row class=""mb10"">
                            <el-col :span=""21"">
                                <h2>[静态变量]</h2>
                            </el-col>
                            <el-col :span=""3"" class=""tr"">
                                <el-button size=""small"" type=""primary"" v-on:click=""getSystemList"" icon=""el-icon-refresh"">全部刷新</");
                WriteLiteral(@"el-button>
                            </el-col>
                        </el-row>
                        <el-collapse v-model=""activeNames"" v-on:change=""handleChange"">
                            <el-collapse-item title=""系统静态变量"" name=""1"">
                                <el-table :fit=""true"" stripe :show-header=""false"" v-loading=""loading"" :data=""staticVariable.administration"">
                                    <el-table-column prop=""name"" min-width=""200"">
                                    </el-table-column>
                                    <el-table-column width=""105"">
                                        <template slot-scope=""scope"">
                                            <el-button size=""mini"" v-on:click=""refreshDictionary(scope.row.path)"" icon=""el-icon-refresh"">刷新</el-button>
                                        </template>
                                    </el-table-column>
                                </el-table>
                            </el-collapse-item>
   ");
                WriteLiteral(@"                         <el-collapse-item title=""产品静态变量"" name=""2"">
                                <el-table :fit=""true"" stripe :show-header=""false"" v-loading=""loading"" :data=""staticVariable.product"">
                                    <el-table-column prop=""name"" min-width=""200"">
                                    </el-table-column>
                                    <el-table-column width=""105"">
                                        <template slot-scope=""scope"">
                                            <el-button size=""mini"" v-on:click=""refreshDictionary(scope.row.path)"" icon=""el-icon-refresh"">刷新</el-button>
                                        </template>
                                    </el-table-column>
                                </el-table>
                            </el-collapse-item>
                            <el-collapse-item title=""仓库静态变量"" name=""3"">
                                <el-table :fit=""true"" stripe :show-header=""false"" v-loading=""loading"" :data=""static");
                WriteLiteral(@"Variable.warehouse"">
                                    <el-table-column prop=""name"" min-width=""200"">
                                    </el-table-column>
                                    <el-table-column width=""105"">
                                        <template slot-scope=""scope"">
                                            <el-button size=""mini"" v-on:click=""refreshDictionary(scope.row.path)"" icon=""el-icon-refresh"">刷新</el-button>
                                        </template>
                                    </el-table-column>
                                </el-table>
                            </el-collapse-item>
                        </el-collapse>
                    </el-tab-pane>
                </el-tabs>
            </article>
        </template>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        let _tagId = 0;
        var Main = new Vue({
            el: '#maint',
            data() {
                return {
                    loading: false,
                    activeName: 'first',
                    activeNames: ['1'],
                    staticVariable: {
                        administration: [
                            {
                                name: 'BmsUserDict',
                                path: '../../rest/bmsuser/dict/refresh'
                            },
                            {
                                name: 'MenuDict',
                                path: '../../rest/bmsmenu/dict/refresh'
                            },
                            {
                                name: 'OrganizationDict',
                                path: '../../rest/organization/dict/refresh'
                            },
                            {
                                name: 'RoleDi");
                WriteLiteral(@"ct',
                                path: '../../rest/role/dict/refresh'
                            },
                            {
                                name: 'PlatformDict',
                                path: '../../rest/platform/dict/refresh'
                            },
                            {
                                name: 'SystemDict',
                                path: '../../rest/system/dict/refresh'
                            }
                        ],
                        sku: [],
                        product: [],
                        warehouse: [
                            {
                                name: 'WarehouseDict',
                                path: '../../rest/warehouse/dict/refresh'
                            }
                        ],
                        custom: [],
                        content: [],
                        order: []
                    },
                    systemList: []
        ");
                WriteLiteral(@"        }
            },
            methods: {
                getSystemList: function () {
                    var _self = this;
                    $.ajax({
                        type: 'get',
                        url: '/rest/system/systems/select/list',
                        async: false,
                        success: function (data) {
                            if (data.success == true) {
                                _self.systemList = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                        ");
                WriteLiteral(@"        _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                handleChange() {
                    this.getSystemList();
                },
                refreshDictionary(path) {
                    var _self = this;
                    $.ajax({
                        type: 'GET',
                        url: path,
                        success: function (data) {
                            if (data.code == 0) {
                                _self.$message({
                                    type: 'success',
   ");
                WriteLiteral(@"                                 message: '操作成功!',
                                });
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
 ");
                WriteLiteral(@"                               });
                            }
                        }
                    });
                }
            },
            mounted() {
                this.getSystemList();
            },
        })
    </script>

");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
