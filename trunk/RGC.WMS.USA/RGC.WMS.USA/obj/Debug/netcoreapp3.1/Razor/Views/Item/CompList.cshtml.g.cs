#pragma checksum "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Item\CompList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8fdc52f30621221cabbd27970040927307500c5f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Item_CompList), @"mvc.1.0.view", @"/Views/Item/CompList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8fdc52f30621221cabbd27970040927307500c5f", @"/Views/Item/CompList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"804fc8bd0ed383ec8f2a14309e921cbb1975ce29", @"/Views/_ViewImports.cshtml")]
    public class Views_Item_CompList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("plr20"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Item\CompList.cshtml"
  
    ViewBag.Title = "compPlatform";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<link rel=""stylesheet"" href=""/lib/elFinder/lib/jquery-ui/themes/base/all.css"" />
<link rel=""stylesheet"" href=""/lib/elFinder/lib/elfinder/css/elfinder.full.css"" />
<link rel=""stylesheet"" href=""/lib/elFinder/lib/elfinder/css/theme.css"" />
<style>
    input[type=""checkbox""] {
        width: 16px;
        height: 16px;
        display: inline-block;
        text-align: center;
        vertical-align: middle;
        line-height: 16px;
        position: relative;
        margin: 8px;
    }

    .avatar {
        width: 200px;
        height: 200px;
        display: block;
    }

    input[type=""checkbox""]::before {
        content: """";
        position: absolute;
        top: 0;
        left: 0;
        background: #fff;
        width: 100%;
        height: 100%;
        border: 1px solid #d9d9d9
    }

    input[type=""checkbox""]:checked::before {
        content: ""\2713"";
        background-color: #fff;
        position: absolute;
        top: 0;
        left: 0;
        widt");
            WriteLiteral("h: 100%;\r\n        border: 1px solid #6fc469;\r\n        color: #6fc469;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n    }\r\n</style>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8fdc52f30621221cabbd27970040927307500c5f4878", async() => {
                WriteLiteral("\r\n    <div id=\"compPlatform\">\r\n        <!-- 标题和地址 -->\r\n        <el-row>\r\n            <el-col :span=\"24\" class=\"breadcrumb-container\">\r\n");
                WriteLiteral(@"                <el-breadcrumb separator=""/"">
                    <el-breadcrumb-item><strong>电商管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>竞品信息</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>


        <el-col :span=""24"" class=""toolbar"">
            <el-form :inline=""true"" size=""small"">
                <el-form-item label=""关联产品型号"">
                    <el-select v-model=""compForm.productId""
                               clearable
                               filterable
                               remote
                               reserve-keyword
                               placeholder=""关联产品型号""
                               :remote-method=""remoteMethod""
                               :loading=""loading"">
                        <el-option v-for=""item in searchList""
                                   :key=""item.id""
                                   :label=""item.value""
                                 ");
                WriteLiteral(@"  :value=""item.id"">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label=""平台"">
                    <el-select v-model=""compForm.id"" placeholder=""请选择平台"" clearable>
                        <el-option v-for=""item in platformlist""
                                   :key=""item.id""
                                   :label=""item.eName""
                                   :value=""item.id"">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label=""型号和名称"">
                    <el-input placeholder=""型号和名称"" v-model=""compForm.key"" clearable></el-input>
                </el-form-item>

                <el-form-item>
                    <el-button v-on:click=""search"" icon=""el-icon-search"">搜索</el-button>
                </el-form-item>
                <el-form-item>
                    <el-button v-on:click=""dialog=true"" type=""primary"" icon=");
                WriteLiteral(@"""el-icon-plus"">添加竞品</el-button>
                </el-form-item>
                <el-form-item>
                    <el-button v-on:click=""refreshDictionary"" icon=""el-icon-finished"" type=""danger"" plain>获取当日零售价</el-button>
                </el-form-item>
            </el-form>
        </el-col>
");
                WriteLiteral("        <el-table :data=\"compList\" size=\"small\" highlight-current-row v-loading=\"listLoading\" style=\"width: 100%;margin-top:10px;\">\r\n");
                WriteLiteral(@"            <el-table-column prop=""id"" label=""id"" width=""50""></el-table-column>
            <el-table-column prop=""itemId"" label=""ItemID"" width=""80""></el-table-column>
            <el-table-column prop=""productId"" label=""产品Id"" width=""80""></el-table-column>
            <el-table-column prop=""factoryModel"" label=""型号"" min-width=""120"" sortable></el-table-column>
            <el-table-column min-width=""180"" prop=""name"" label=""产品名"">
            </el-table-column>
            <el-table-column min-width=""100"" prop=""srcFull"" label=""图片"">
                <template slot-scope=""scope"">
                    <img :src=""scope.row.srcFull"" class=""pimg"" alt=""no image"" v-if=""scope.row.srcFull!=''"" height=""50"">
                </template>
            </el-table-column>
            <el-table-column min-width=""100"" prop=""platformName"" label=""平台名称"" sortable>
            </el-table-column>
            <el-table-column min-width=""100"" prop=""retailPriceString"" label=""当日零售价"">
            </el-table-column>
            <el");
                WriteLiteral(@"-table-column min-width=""50"" prop=""platformUrl"" label=""链接"">
                <template slot-scope=""scope"">
                    <el-tooltip class=""item"" effect=""dark"" placement=""top-start"">
                        <div slot=""content"" style=""width:250px"">{{scope.row.platformUrl}}
                        </div>
                        <p v-if=""scope.row.platformUrl"">
                            <el-link :href=""scope.row.platformUrl"" type=""success"" target=""_blank""><i class=""el-icon-paperclip""></i></el-link>
                        </p>

                    </el-tooltip>
                </template>
            </el-table-column>
            <el-table-column min-width=""150"" prop=""remarks"" label=""备注"">
            </el-table-column>
            <el-table-column label=""操作"" width=""150"" fixed=""right"">
                <template slot-scope=""scope"">
                    <el-dropdown trigger=""click"" size=""small"">
                        <el-button size=""mini"" class=""mb5"" style=""width:100px;"">
               ");
                WriteLiteral(@"             操作
                            <i class=""el-icon-caret-bottom el-icon--right""></i>
                        </el-button>
                        <el-dropdown-menu slot=""dropdown"">
                            <el-dropdown-item>
                                <div v-on:click=""openEditcompPlatform(scope.row)"">修改信息</div>
                            </el-dropdown-item>
                            <el-dropdown-item>
                                <div v-on:click=""deletecomp(scope.row.id)"">删除</div>
                            </el-dropdown-item>
                        </el-dropdown-menu>
                    </el-dropdown>
                </template>
            </el-table-column>
        </el-table>
        <!--工具条-->
        <el-col :span=""24"" class=""toolbar"">
            <el-pagination v-on:size-change=""handleSizeChange"" v-on:current-change=""handleCurrentChange"" :current-page=""page"" :page-sizes=""[10,20,30,40,50]"" :page-size=""pageSize"" layout=""total, sizes, prev, pager, next, jumper""");
                WriteLiteral(" :total=\"total\" style=\"float:right;\">\r\n            </el-pagination>\r\n        </el-col>\r\n        <el-drawer title=\"添加竞品\"\r\n                   ");
                WriteLiteral(@"                   :visible.sync=""dialog""
                   direction=""rtl""
                   custom-class=""demo-drawer""
                   ref=""drawer""
                   size=""50%"">
            <div class=""demo-drawer__content"">
                <el-form :inline=""true"" :model=""compProduct"" ref=""compProduct"" label-width=""200px"" class=""skuform"" label-position=""right"" size=""mini"">

                    <div slot=""header"">
                        <span slot=""header"" class=""step-jump pr"" id=""sku_baseInfo"">
                            <i class=""tip-tit""><i class=""pr z-in2 pl10"">添加竞品</i></i>
                        </span>
                    </div>
                    <el-row>
                        <el-form-item label=""Product Name(产品名称)"" prop=""itemName"">
                            <el-input v-model=""compProduct.name"" type=""textarea"" :rows=""1"" :autosize=""{ minRows: 2, maxRows: 4}""
                                      placeholder=""产品名称"" class=""w259"" />
                        </el-form-item>
");
                WriteLiteral(@"                        <el-form-item label=""Model(型号)"" prop=""factoryModel"" :rules=""[{ required: true, message: '请输入型号', trigger: 'blur' }]"">
                            <el-input v-model=""compProduct.factoryModel"" class=""w259""></el-input>
                        </el-form-item>
                        <el-form-item label=""Brand(品牌)"" prop=""factoryModel"">
                            <el-input v-model=""compProduct.brandName"" class=""w259""></el-input>
                        </el-form-item>
                        <el-form-item label=""平台"" prop=""platformId"">
                            <el-select v-model=""compProduct.platformId"" placeholder=""请选择平台"" size=""mini"" clearable class=""w259"" disabled>
                                <el-option v-for=""item in platformlist""
                                           :key=""item.id""
                                           :label=""item.ename""
                                           :value=""item.id"">
                                </el-option>
               ");
                WriteLiteral(@"             </el-select>
                        </el-form-item>
                    </el-row>
                    <el-row>
                        <el-form-item label=""关联产品"">
                            <el-row>
                                关联产品Id:{{compProduct.productId}}
                            </el-row>
                            <el-row>
                                关联在售产品Id:{{compProduct.itemId}}
                            </el-row>
                            <el-button v-on:click=""openRelate()"">关联产品</el-button>
                        </el-form-item>
                        <el-form-item label=""唯一标识"">
                            <el-input v-model.trim=""compProduct.uniqueId"" class=""w259""></el-input>
                        </el-form-item>
                    </el-row>

                    <el-row>


                        <el-form-item label=""平台链接"">
                            <el-input v-model=""compProduct.platformUrl"" type=""textarea"" :rows=""4""
                    ");
                WriteLiteral(@"                  placeholder=""产品链接"" class=""lianjie_textarea w259"" />
                        </el-form-item>

                        <el-form-item label=""Remark (产品备注)"">
                            <el-input v-model=""compProduct.remarks"" type=""textarea"" :rows=""4""
                                      placeholder=""Remark (产品备注)"" class=""w259"" />
                        </el-form-item>
                    </el-row>
                    <el-row>
                        <el-form-item label=""Picture(产品示意图) (320*320)"" prop=""imageMain"">
                            <div class=""m-t-10 avatar-uploader"" v-on:click=""openFileManage()"">
                                <div class=""el-upload el-upload--text"">
                                    <img v-if=""compMainSrc"" :src=""compMainSrc"" class=""avatar"">
                                    <i v-else class=""el-icon-plus avatar-uploader-icon""></i>
                                </div>
                            </div>
                        </el-form-item>
  ");
                WriteLiteral(@"                  </el-row>

                </el-form>

                <div style=""float:right;margin:10px"">
                    <el-button v-on:click=""dialog = false"">取 消</el-button>
                    <el-button type=""primary"" size=""medium"" v-on:click=""saveComp"" v-loading=""loading"">
                        {{ loading ? '提交中 ...' : '确 定' }}
                        <i class=""el-icon-check"" style=""margin-left:5px;""></i>
                    </el-button>
                </div>
            </div>
            <el-drawer title=""在售产品列表""
                       :append-to-body=""true""
                       ");
                WriteLiteral(@"                       :visible.sync=""innerDrawer""
                       size=""45%"">

                <div style=""margin:10px"">
                    <el-col :span=""24"" class=""toolbar"">
                        <el-form :inline=""true"" size=""small"">
                            <el-form-item>
                                <el-input placeholder=""型号和名称"" v-model=""itemForm.key"" clearable></el-input>
                            </el-form-item>
                            <el-form-item>
                                <el-select v-model=""itemForm.id"" placeholder=""请选择平台"" clearable>
                                    <el-option v-for=""item in platformlist""
                                               :key=""item.id""
                                               :label=""item.ename""
                                               :value=""item.id"">
                                    </el-option>
                                </el-select>
                            </el-form-item>
                  ");
                WriteLiteral(@"          <el-form-item>
                                <el-button v-on:click=""searchProduct"" icon=""el-icon-search"">搜索</el-button>
                            </el-form-item>
                        </el-form>
                    </el-col>
                    <el-table :data=""itemForm.items"" size=""small"" highlight-current-row v-loading=""listLoading"" style=""width: 100%;margin-top:10px;"" height=""600"">
                        <el-table-column prop=""id"" label=""id"" width=""50""></el-table-column>
                        <el-table-column prop=""productId"" label=""产品ID"" width=""80""></el-table-column>
                        <el-table-column prop=""factoryModel"" label=""型号"" min-width=""120"" sortable></el-table-column>
                        <el-table-column min-width=""180"" prop=""itemName"" label=""产品名"">
                        </el-table-column>
                        <el-table-column min-width=""100"" prop=""srcFull"" label=""图片"">
                            <template slot-scope=""scope"">
                           ");
                WriteLiteral(@"     <img :src=""scope.row.srcFull"" class=""pimg"" alt=""no image"" v-if=""scope.row.srcFull!=''"" height=""50"">
                            </template>
                        </el-table-column>
                        <el-table-column min-width=""100"" prop=""platformName"" label=""平台名称"" sortable>
                        </el-table-column>
");
                WriteLiteral(@"                        <el-table-column label=""操作"" width=""100"" fixed=""right"">
                            <template slot-scope=""scope"">
                                <el-button size=""mini"" class=""mb5"" v-on:click=""chooseProduct(scope.row)"" v-if=""scope.row.id!=compProduct.itemId"">
                                    选择
                                </el-button>
                                <p v-else style=""color:red"">已选择</p>
                            </template>
                        </el-table-column>
                    </el-table>
                    <el-col :span=""24"" class=""toolbar"">
                        <el-pagination v-on:size-change=""handleSizeChange2"" v-on:current-change=""handleCurrentChange2"" :current-page=""page2"" :page-sizes=""[10,20,30,40,50]"" :page-size=""pageSize"" layout=""total, sizes, prev, pager, next, jumper"" :total=""total2"" style=""float:right;"">
                        </el-pagination>
                    </el-col>
                </div>
            </el-drawer>

 ");
                WriteLiteral(@"       </el-drawer>
        <el-dialog title=""附件 Attachment"" :visible.sync=""fileManageVisable"" :close-on-click-modal=""false"" top=""5%"" width=""1000px"">
            <div ref=""elfinder"" id=""elfinder""></div>
            <span slot=""footer"" class=""dialog- footer"" style=""display:block;text-align: center;margin-top: 20px"">
                <el-button type=""primary"" v-on:click=""saveCompMainUrl"">设为预览图</el-button>
            </span>
        </el-dialog>
    </div>
    <script src=""/lib/elFinder/lib/jquery-ui/jquery-ui.min.js""></script>
    <script src=""/lib/elFinder/lib/elfinder/js/elfinder.full.js""></script>
    <script src=""/lib/elFinder/lib/elfinder/js/i18n/elfinder.zh_CN.js""></script>
    <script>
        var Main = {
            data() {
                return {
                    compProduct: {
                        status: 0,
                        name: void 0,
                        factoryModel: void 0,
                        brandName: void 0,
                        remarks: void 0,");
                WriteLiteral(@"
                        src: void 0,
                        platformId: void 0,
                        imageMain: void 0,
                        productId: 0,
                        uniqueId: void 0,
                        platformUrl: void 0,
                        itemId: 0,
                        id: 0,
                    },
                    compMainSrc: void 0,
                    categoryIds: [],
                    cascader: [],
                    platformlist: [],
                    statuslist: [
                        {
                            label: '有效',
                            id: 0
                        },
                        {
                            label: '失效',
                            id: 1
                        },
                    ],
                    platformSkuList: [],
                    defaultProps: {
                        children: 'child',
                        label: 'ename'
                    },
           ");
                WriteLiteral(@"         fileManageVisable: false,
                    dialog: false,
                    innerDrawer: false,
                    editcompPlatformVisible: false,
                    editSkuPriceVisible: false,
                    /*==编辑界面==*/
                    editFormVisible: false,//是 否显示
                    editLoading: false,
                    editFormRules: {
                        platformSkuUrl: [
                            { required: true, message: '请输入链接', trigger: 'blur' }
                        ],
                        // cname:[{ required: true, message: '请输入中文名称', trigger: 'blur' }]
                    },
                    editForm: {
                        id: '',
                        ename: '',
                        cname: '',
                        isAPI: false,
                        isPython: false,
                    },
                    compPlatformForm: {
                        id: 0,
                        skuId: 0,
                       ");
                WriteLiteral(@" itemName: void 0,
                        factoryModel: void 0,
                        platformId: 0,
                        platformSkuUrl: '',
                        wholeSalePriceString: '0.00',
                        retailPriceString: '0.00',
                        asinId: '',
                        isValid: true,
                        walmartSkuId: void 0,
                        ebayItemId: void 0,
                    },
                    itemPriceForm: {
                        id: 0,
                        skuId: 0,
                        itemName: void 0,
                        factoryModel: void 0,
                        platformId: 0,
                        platformName: '',
                        wholeSalePriceString: '0.00',
                        retailPriceString: '0.00',

                    },
                    srcFull: '',
                    //分页
                    total: 0,
                    total2: 0,
                    page: 1,
        ");
                WriteLiteral(@"            page2: 1,
                    pageSize: 10,

                    //商品界面
                    items: [],
                    checkName: '未选中平台',
                    listLoading: false,
                    skuListLoading: false,
                    skuFormVisible: false,
                    itemForm: {
                        items: [],
                        id: '',
                        itemId: 0,
                        productId: void 0,
                        status: '',
                        classCode: '',
                        check: '',
                        key: ''
                    },
                    compForm: {
                        items: [],
                        id: '',
                        itemId: 0,
                        productId: void 0,
                        status: '',
                        classCode: '',
                        check: '',
                        key: ''
                    },
                    platformFo");
                WriteLiteral(@"rm: {
                        items: [],
                        id: '',
                        classCode: '',
                        check: ''
                    },
                    filters: {
                        searchKey: """",
                        isChanged: 0
                    },
                    platformId: void 0,
                    compList: [],
                    searchList: [],
                    searchAllList: [],
                    compVisible: false,
                    compLoading: false,
                    loading: false,
                }
            },
            methods: {
                openFileManage() {
                    this.fileManageVisable = true;
                    //selectedFilePath = '';
                    setTimeout(() => {
                        this.fileManageInitial();
                    }, 0)
                },
                saveCompMainUrl() {
                    //console.log(this.mainSrc);
                    if (s");
                WriteLiteral(@"electedFilePath != undefined && selectedFilePath != """") {
                        this.compProduct.imageMain = selectedFilePath;
                        //document.getElementById(""mainSrc"").src = mainSrc;
                        this.compMainSrc = previewSrc;
                        this.fileManageVisable = false;
                    } else {
                        this.$message({
                            type: 'error',
                            message: '请选择图片'
                        });
                    }
                },
                fileManageInitial() {
                    var _self = this;
                    var myCommands = elFinder.prototype._options.commands;
                    var disabled = ['callback', 'chmod', 'editor', 'netmount', 'ping',  'zipdl', 'help']; // Not yet implemented commands in elFinder.NetCore
                    elFinder.prototype.i18.en.messages.TextArea = ""Edit"";

                    $.each(disabled, function (i, cmd) {
                      ");
                WriteLiteral("  (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);\r\n                    });\r\n\r\n                    var options = {\r\n                        url: \'/item/connector\', // Default (Local File System)\r\n");
                WriteLiteral(@"                        rememberLastDir: false, // Prevent elFinder saving in the Browser LocalStorage the last visited directory
                        commands: myCommands,
                        lang: 'zh_CN', // elFinder supports UI and messages localization. Check the folder Content\elfinder\js\i18n for all available languages. Be sure to include the corresponding .js file(s) in the JavaScript bundle.
                        uiOptions: { // UI buttons available to the user
                            toolbar: [
                                ['back', 'forward'],
                                ['reload'],
                                ['home', 'up'],
                                ['mkdir', 'mkfile', 'upload'],
                                ['open', 'download'],
                                ['undo', 'redo'],
                                ['info'],
                                ['quicklook'],
                                ['copy', 'cut', 'paste'],
                           ");
                WriteLiteral(@"     ['rm'],
                                ['duplicate', 'rename', 'edit'],
                                ['selectall', 'selectnone', 'selectinvert'],
                                ['view', 'sort'],
                                ['search'],
                            ]

                        }, handlers: {
                            select: function (event, elfinderInstance) {
                                if (event.data.selected.length == 1) {
                                    var item = $('#' + event.data.selected[0]);
                                    if (!item.hasClass('directory')) {
                                        selectedFile = event.data.selected[0];
                                        previewSrc = ""/item/connector?cmd=file&target="" + selectedFile + ""&_t="" + event.timeStamp;

                                        $.ajax({
                                            type: 'post',
                                            url: '/item/selectFile',
     ");
                WriteLiteral(@"                                       data: { target: selectedFile },
                                            success: function (data) {
                                                selectedFilePath = data;
                                            },
                                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                                if (errorThrown == ""Unauthorized"") {
                                                    window.parent.MainIndex.openLoginFrom();
                                                    _self.$message({
                                                        type: 'error',
                                                        message: XMLHttpRequest.responseJSON.msg
                                                    });
                                                } else {
                                                    _self.$message({
                                                ");
                WriteLiteral(@"        type: 'error',
                                                        message: errorThrown
                                                    });
                                                }
                                            }
                                        });
                                        return;
                                    }
                                }
                                selectedFile = null;
                            }
                        }

                    };
                    $('#elfinder').elfinder(options).elfinder('instance');
                },
                searchProduct() {
                    this.page2 = 1;

                    this.getItemIncludeList();

                },

                chooseProduct(row) {
                    this.compProduct.productId = row.productId;
                    this.compProduct.itemId = row.id;
                    this.compProduct.platformId = row.platfor");
                WriteLiteral(@"mId;
                    this.innerDrawer = false;
                },
                openRelate() {
                    this.innerDrawer = true;
                    this.getItemIncludeList();
                },
                handleCurrentChange2(val) {
                    this.page2 = val;
                    this.getItemIncludeList();
                },
                handleSizeChange2(val) {
                    this.pageSize = val;
                    this.getItemIncludeList();
                },
                saveComp() {
                    var _self = this;
                    console.log(_self.compProduct)
                    var _valid = false;
                    this.$refs['compProduct'].validate((valid) => {
                        if (valid) {
                            _valid = true;
                        }
                    });
                    if (!_valid) {
                        return false;
                    }
                    _self.compProduct.");
                WriteLiteral(@"id =  0
                    _self.loading=true
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        url: '../../rest/competition/add',
                        data: JSON.stringify(_self.compProduct),
                        success: function (data) {
                            if (data.success) {
                                _self.$message({
                                    type: 'success',
                                    message: '成功!'
                                });
                                _self.clear()
                                _self.getCompList();
                                _self.dialog = false;
                            }
                            else {
                                _self.$message({
                                    type: 'error',
                                    message: data.msg
                                });
                          ");
                WriteLiteral(@"  }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                        complete(){
                            _self.loading=false;
                        }
                    });
                },
                getItemIncludeList() {
                    var _self = this;
                 ");
                WriteLiteral(@"   var id = 0;
                    if (!_self.itemForm.id > 0) {
                        id = 0
                    } else {
                        id = _self.itemForm.id;
                    }
                    _self.listLoading = true;
                    $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        url: '../../rest/item/list',
                        data: { platformId: id, key: _self.itemForm.key, pageSize: _self.pageSize, currentPage: _self.page2, uniqueId: """", status: _self.itemForm.status },
                        success: function (data) {
                            if (data.success == true) {
                                _self.total2 = data.data.page.totalCount;
                                _self.itemForm.items = data.data.list;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    mes");
                WriteLiteral(@"sage: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                    complete(){
                        _self.listLoading = false;
                    }
                    });
                },
                getSear");
                WriteLiteral(@"chAll() {
                    var _self = this;
                    $.ajax({
                        type: 'get',
                        //dataType: 'json',
                        //contentType: 'application/json',
                        url: '/rest/item/competition/search/list',
                        //data: JSON.stringify(_self.filters),
                        data: _self.filters.searchKey,
                        success: function (data) {
                            _self.searchAllList = data.data;
                            _self.listLoading = false;
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
          ");
                WriteLiteral(@"                      });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                remoteMethod(query) {
                    if (query !== '') {
                        this.loading = true;
                        setTimeout(() => {
                            this.loading = false;
                            this.searchList = this.searchAllList.filter(item => {
                                return item.value != null ? item.value.toLowerCase()
                                    .indexOf(query.toLowerCase()) > -1 : [];
                            });
                        }, 200);
                    } else {
                        this.searchList = [];
                    }
                },
    ");
                WriteLiteral(@"            getCompList() {
                    this.listLoading = true;
                    var _self = this;
                    var id = 0;
                    if (!_self.compForm.id > 0) {
                        id = 0
                    } else {
                        id = _self.compForm.id;
                    }
                    var itemId = 0;
                    if (!_self.compForm.itemId > 0) {
                        itemId = 0
                    } else {
                        itemId = _self.compForm.itemId;
                    } var productId = 0;
                    if (!_self.compForm.productId > 0) {
                        productId = 0
                    } else {
                        productId = _self.compForm.productId;
                    }
                    $.ajax({
                        type: 'POST',
                         dataType: 'json',
                         contentType: 'application/json',
                        url: '/rest/item/competiti");
                WriteLiteral(@"on/page/query',
                        data: JSON.stringify({ platformId: id, searchKey: _self.compForm.key, pageSize: _self.pageSize, currentPage: _self.page, itemId: itemId, productId: productId, status: 0 }),
                        success: function (data) {
                            if (data.success == true) {
                                _self.compList = data.data;
                                _self.total = data.page.totalCount;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                            _self.listLoading = false;

                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            _self.listLoading = false;

                            if (errorThrown == ""Unauthorized"") {
         ");
                WriteLiteral(@"                       window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                        complete() {
                            _self.listLoading = false;
                        }
                    });
                },
                refreshDictionary() {
                    var _self = this;
                    $.ajax({
                        type: 'GET',
                        url: '../../rest/competition/refresh',
                        success: function (data) {
                    ");
                WriteLiteral(@"        if (data.code == 0) {
                                //_self.$message({
                                //    type: 'success',
                                //    message: '操作成功!',
                                //});
                                _self.getCompList();

                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                })");
                WriteLiteral(@";
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                //改变每页显示数据条数
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getCompList();
                },
                addItem() {
                    window.parent.MainIndex.addTabByIframe(""在售产品添加"", ""/Item/Add"", ""在售产品添加"");
                },
                addSku() {
                    this.page = 1;
                    this.getSkuExludeList();
                },
                search() {
                    this.page = 1;

                    this.getCompList();

                },
                rowChoose(row, event, column) {
                    this.compForm.id = row.id;
          ");
                WriteLiteral(@"          this.getCompList();
                    this.checkName = row.ename;
                },
                seeMore(row) {
                    this.compForm.id = row.id;
                    this.getCompList();
                    this.checkName = row.ename;
                },
                handleCurrentChange3(val) {
                    this.page3 = val;
                    this.GetPlatformList();
                },
                handleCurrentChange4(val) {
                    this.page4 = val;
                    this.getPlatformIncludeList();
                },
                openEditcompPlatform(row) {
                    window.parent.MainIndex.addTabByIframe(""竞品详情_"" + row.id, ""/Item/CompDetail?compId="" + row.id, ""竞品详情"");
                },
                openEditSkuPrice(row) {
                    var _self = this;
                    _self.editSkuPriceVisible = true;
                    //console.log(row)
                    _self.itemPriceForm.id = row.id;
           ");
                WriteLiteral(@"         _self.itemPriceForm.itemName = row.itemName;
                    _self.itemPriceForm.factoryModel = row.factoryModel;
                    _self.itemPriceForm.platformName = row.platformName;
                    _self.itemPriceForm.wholeSalePriceString = row.wholeSalePriceString;
                    _self.itemPriceForm.retailPriceString = row.retailPriceString;


                },
                handleSuccess(res, file, fileList) {
                    var _self = this;
                    var url = URL.createObjectURL(file.raw);
                    _self.editForm.srcFull = url;
                    _self.srcFull = url;
                    var reader = new FileReader();
                    reader.readAsDataURL(file.raw);
                    reader.onload = function (e) {
                        _self.editForm.byteStr = e.target.result;

                    };
                },
                //【获取平台列表】
                GetPlatformList() {
                    var _self = this;
 ");
                WriteLiteral(@"                   $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        url: '/rest/item/platform/list',
                        success: function (data) {
                            if (data.success == true) {
                                _self.platformlist = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.r");
                WriteLiteral(@"esponseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                handleCurrentChange(val) {
                    this.page = val;
                    this.getCompList();
                },
                deletecomp(id) {
                    var _self = this;
                    this.$confirm(""确定删除该竞品吗"", '提示', {
                        type: 'warning'
                    }).then(() => {
                        $.ajax({
                            type: 'GET',
                            dataType: 'json',
                            url: '../../rest/competition/delete',
                            data: { id: id },
                            success: function ");
                WriteLiteral(@"(data) {
                                if (data.success) {
                                    _self.$message({
                                        type: 'success',
                                        message: '删除成功!'
                                    });

                                    _self.getCompList();
                                }
                                else {
                                    _self.$message({
                                        type: 'error',
                                        message: data.msg
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                if (errorThrown == ""Unauthorized"") {
                                    window.parent.MainIndex.openLoginFrom();
                                    _self.$message({
                                        type: '");
                WriteLiteral(@"error',
                                        message: XMLHttpRequest.responseJSON.msg
                                    });
                                } else {
                                    _self.$message({
                                        type: 'error',
                                        message: errorThrown
                                    });
                                }
                            }
                        });
                    }).catch(() => {

                    });
                },
                clear() {
                    var _self = this;
                    //清空缓存
                    _self.compProduct= {
                        status: 0,
                        name: void 0,
                        factoryModel: void 0,
                        brandName: void 0,
                        remarks: void 0,
                        src: void 0,
                        platformId: void 0,
                        imageM");
                WriteLiteral(@"ain: void 0,
                        productId: 0,
                        uniqueId: void 0,
                        platformUrl: void 0,
                        itemId: void 0,
                        id: 0,
                    }
                    _self.compMainSrc = """"
                },

            },
            mounted() {
                this.GetPlatformList();
                //this.getCompList();
                // this.refreshDictionary();
                this.getCompList();
                this.getSearchAll();
                this.listLoading = true;
            }
        }
        var Ctor = Vue.extend(Main);
        new Ctor().$mount('#compPlatform');
    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
