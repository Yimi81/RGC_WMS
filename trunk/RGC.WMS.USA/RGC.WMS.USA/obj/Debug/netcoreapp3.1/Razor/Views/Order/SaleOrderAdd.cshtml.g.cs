#pragma checksum "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Order\SaleOrderAdd.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5e9a7ad830efabac37070663d2ce3acbf270769a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Order_SaleOrderAdd), @"mvc.1.0.view", @"/Views/Order/SaleOrderAdd.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5e9a7ad830efabac37070663d2ce3acbf270769a", @"/Views/Order/SaleOrderAdd.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"804fc8bd0ed383ec8f2a14309e921cbb1975ce29", @"/Views/_ViewImports.cshtml")]
    public class Views_Order_SaleOrderAdd : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Order\SaleOrderAdd.cshtml"
  
    ViewData["Title"] = "SaleOrderAdd";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    .w180 {
        width: 180px;
    }
</style>
<div id=""userlist"" class=""p15 bac01 h100b bsb"">
    <el-card class=""el-card--plr"">
        <el-row class=""toolbar toolbar--top"">
            <el-col :span=""6"">
                <el-breadcrumb separator=""/"">
                    <el-breadcrumb-item><strong>订单管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>添加销售订单</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>
        <template>
            <el-form :inline=""true"" :model=""orderInfo"" ref=""order"" label-width=""300px"" class=""skuform"" label-position=""right"" size=""mini"" :loading=""formLoading"">
                <el-tabs v-model=""activeName"" type=""card"">
                    <el-tab-pane label=""基本订单信息"" name=""first"">
                        <el-card class=""box-card"" shadow=""hover"">
                            <span slot=""header"" class=""step-jump pr"">
                                <i class=""tip-tit"">
                         ");
            WriteLiteral(@"           <i class=""pr z-in2 pl10"">订单信息</i>
                                </i>
                            </span>
                            <el-form-item label=""订单编号"" prop=""orderNumber"">
                                <el-input v-model=""orderInfo.orderNumberString"" class=""w180"" disabled=""disabled"" />
                            </el-form-item>
                            <el-form-item label=""下单时间"" prop=""orderDateString"">
                                <el-date-picker v-model=""orderInfo.orderDateString"" type=""datetime"" placeholder=""选择日期"" style=""width:180px;""></el-date-picker>
                            </el-form-item>
");
            WriteLiteral(@"                            <el-form-item label=""支付时间"">
                                <el-date-picker v-model=""orderInfo.paymentDateString"" type=""datetime"" placeholder=""选择日期"" style=""width:180px;""></el-date-picker>
                            </el-form-item>
                            <el-form-item label=""商品总价"">
                                <el-input v-model.trim=""orderInfo.orderTotalString"" disabled=""disabled"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""运费"">
                                <el-input-number v-model=""orderInfo.shippingAmountString"" :controls=""false"" :precision=""2"" :min=""0"" size=""mini"" class=""w180"">
                                </el-input-number>
                            </el-form-item>
                            <el-form-item label=""税费"">
                                <el-input-number v-model=""orderInfo.taxAmountString"" :controls=""false"" :precision=""2"" :min=""0"" size=""mini"" class=""w180"">
         ");
            WriteLiteral(@"                       </el-input-number>
                            </el-form-item>
                            <el-form-item label=""支付金额"">
                                <el-input-number v-model=""orderInfo.amountPaidString"" :controls=""false"" :precision=""2"" :min=""0"" size=""mini"" class=""w180"">
                                </el-input-number>
                            </el-form-item>
                        </el-card>
                        <el-card class=""box-card"" shadow=""hover"">
                            <span slot=""header"" class=""step-jump pr"">
                                <i class=""tip-tit"">
                                    <i class=""pr z-in2 pl10"">客户信息</i>
                                </i>
                               
                            </span>
                            <el-form-item label=""客户姓名"">
                                <el-input v-model.trim=""orderInfo.customerUsername"" class=""w180""></el-input>
                            </el-form-item>
         ");
            WriteLiteral(@"                   <el-form-item label=""客户邮箱"">
                                <el-input v-model.trim=""orderInfo.customerEmail"" class=""w180""></el-input>
                            </el-form-item>
                            <el-row>
                                <el-form-item label=""客户备注"">
                                    <el-input v-model=""orderInfo.customerNotes"" type=""textarea"" :rows=""4"" class=""w180"" />
                                </el-form-item>
                            </el-row>
                        </el-card>
                        <el-card class=""box-card"" shadow=""hover"">
                            <span slot=""header"" class=""step-jump pr"">
                                <i class=""tip-tit"">
                                    <i class=""pr z-in2 pl10"">运输地址</i>
                                </i>
                            </span>
                            <el-form-item label=""名字"">
                                <el-input v-model=""orderInfo.shipToName"" class=""w180"">");
            WriteLiteral(@"</el-input>
                            </el-form-item>
                            <el-form-item label=""公司"">
                                <el-input v-model=""orderInfo.shipToCompany"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""地址1"">
                                <el-input v-model=""orderInfo.shipToAddress"" type=""textarea"" :row=""3"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""地址2"">
                                <el-input v-model=""orderInfo.shipToAddress2"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""城市"">
                                <el-input v-model=""orderInfo.shipToCity"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""洲"">
                                <el-input v-model=""orderInfo.shipToState"" class");
            WriteLiteral(@"=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""国家"">
                                <el-input v-model=""orderInfo.shipToCountry"" class=""w180"" disabled=""disabled""></el-input>
                            </el-form-item>
                            <el-form-item label=""邮编"">
                                <el-input v-model=""orderInfo.shipToZipcode"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""电话"">
                                <el-input v-model=""orderInfo.shipToPhone"" class=""w180""></el-input>
                            </el-form-item>
                        </el-card>
                        <el-card class=""box-card"" shadow=""hover"">
                            <span slot=""header"" class=""step-jump pr"">
                                <i class=""tip-tit"">
                                    <i class=""pr z-in2 pl10"">账单地址</i>
                                </i>");
            WriteLiteral(@"

                            </span>
                            <el-row>
                                <el-form-item label=""是否和运输地址相同"">
                                    <el-switch v-model=""orderInfo.isAddressSame""></el-switch>
                                </el-form-item>
                            </el-row>
                            
                            <el-form-item label=""名字"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToName"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""公司"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToCompany"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""地址1"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToAddress"" type=""textare");
            WriteLiteral(@"a"" :row=""3"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""地址2"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToAddress2"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""城市"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToCity"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""洲"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToState"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""国家"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToCountry"" class=""w180"" disabled=""disabled""></el-input>
  ");
            WriteLiteral(@"                          </el-form-item>
                            <el-form-item label=""邮编"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToZipcode"" class=""w180""></el-input>
                            </el-form-item>
                            <el-form-item label=""电话"" v-if=""orderInfo.isAddressSame == false"">
                                <el-input v-model=""orderInfo.billToPhone"" class=""w180""></el-input>
                            </el-form-item>
");
            WriteLiteral(@"                        </el-card>
                    </el-tab-pane>
                    <el-tab-pane label=""产品列表"" name=""second"">
                        <el-card class=""box-card"" shadow=""none"">
                            <span slot=""header"" class=""step-jump pr"" id=""item_list"">
                                <i class=""tip-tit""><i class=""pr z-in2 pl10"">产品列表 Order Items</i></i>
                            </span>
                            <span>
                                <el-button slot=""append"" type=""primary"" plain v-on:click=""openSelectSku"">
                                    选择Sku
                                    <i class=""el-icon-menu""></i>
                                </el-button>
                            </span>
                            <el-table :data=""orderInfo.items"" size=""mini"" :height=""height_table"" highlight-current-row v-loading=""itemListLoading"">
");
            WriteLiteral(@"                                <el-table-column prop=""name"" label=""产品名称"" width=""280""></el-table-column>
                                <el-table-column prop=""factoryModel"" label=""产品型号""></el-table-column>
                                <el-table-column prop=""batchNo"" label=""产品型号""></el-table-column>
                                <el-table-column prop=""warehouseName"" label=""所在仓库""></el-table-column>
                                <el-table-column prop=""qty"" label=""数量"">
                                    <template slot-scope=""scope"">
                                        <el-input-number v-model=""scope.row.qty"" :controls=""false"" :precision=""0"" :min=""0"" size=""mini"" v-on:blur=""qtyBlur()"">
                                        </el-input-number>
                                    </template>
                                </el-table-column>
                                <el-table-column prop=""unitPriceString"" label=""单价($)"">
                                    <template slot-scope=""scope"">
 ");
            WriteLiteral(@"                                       <el-input-number v-model=""scope.row.unitPriceString"" :controls=""false"" :precision=""2"" :min=""0"" size=""mini"" v-on:blur=""unitPriceBlur()"">
                                        </el-input-number>
                                    </template>
                                </el-table-column>
                                <el-table-column width=""220"" label=""操作"">
                                    <template slot-scope=""scope"">
                                        <el-button type=""danger"" icon=""el-icon-delete"" circle v-on:click=""del(scope.$index)""></el-button>
");
            WriteLiteral(@"                                    </template>
                                </el-table-column>
                            </el-table>
                        </el-card>
                    </el-tab-pane>
                </el-tabs>
            </el-form>
            <div style=""text-align:left;margin-bottom:20px;margin-top:20px"">
                <el-button size=""mini"" type=""primary"" v-on:click=""save""");
            BeginWriteAttribute("class", " class=\"", 15188, "\"", 15196, 0);
            EndWriteAttribute();
            WriteLiteral(@">保存</el-button>
            </div>

            <!-- 选择Sku -->
            <el-dialog title=""Sku列表"" :visible.sync=""stockListVisable"" :close-on-click-modal=""false"" top=""5%"" width=""1200px"">
                <article class=""search"">
                    <section>
                        <el-form :inline=""true"" size=""small"" :model=""filters"">
                            <el-input placeholder=""可根据工厂型号搜索"" v-model=""filters.searchKey""
                                      v-on:keyup.enter.native=""getSkuStockList()"" style=""width:250px"" clearable size=""small""></el-input>
                            <el-form-item label=""所在仓库"" prop=""filters.warehouseId"">
                                <el-select v-model=""filters.warehouseId"" placeholder=""请选择仓库"" class=""w200"">
                                    <el-option v-for=""item in warehouseList""
                                               :key=""item.id""
                                               :label=""item.number""
                                               ");
            WriteLiteral(@":value=""item.id"">
                                    </el-option>
                                </el-select>
                            </el-form-item>
                            <el-form-item>
                                <el-button v-on:click=""search"" icon=""el-icon-search"">搜索</el-button>
                            </el-form-item>
                        </el-form>
                    </section>
                </article>
                <el-row>
                    <el-col>
                        <el-table class=""data-table"" v-loading=""stockListLoading"" :data=""skuStockList"" :fit=""true"" border size=""small"">
                            <el-table-column min-width=""50"" prop=""id"" label=""ID"">
                                <template slot-scope=""scope"">
                                    <i>{{scope.row.id}}</i>
                                </template>
                            </el-table-column>
");
            WriteLiteral(@"                            <el-table-column min-width=""100"" label=""工厂型号"">
                                <template slot-scope=""scope"">
                                    <i>{{scope.row.sku.factoryModel}}</i>
                                </template>
                            </el-table-column>
                            <el-table-column width=""120"" label=""图片"" align=""center"">
                                <template slot-scope=""scope"">
                                    <img v-if=""scope.row.sku.primaryImageSrcFull"" class=""pimg"" alt=""no image"" :src=""scope.row.sku.primaryImageSrcFull"" height=""50"">
                                </template>
                            </el-table-column>
                            <el-table-column min-width=""100"" prop=""batchNo"" label=""批次号"">
                                <template slot-scope=""scope"">
                                    <i>{{scope.row.batchNo}}</i>
                                </template>
                            </el-table-column>");
            WriteLiteral(@"

                            <el-table-column min-width=""100"" label=""所在仓库"">
                                <template slot-scope=""scope"">
                                    <i>{{scope.row.warehouse.name}}</i>
                                </template>
                            </el-table-column>

                            <el-table-column width=""120"" label=""现货库存"" align=""center"">
                                <template slot-scope=""scope"">
                                    <i>{{scope.row.availableStock}}</i>
                                </template>
                            </el-table-column>

");
            WriteLiteral(@"                            <el-table-column width=""100"" label=""操作"">
                                <template slot-scope=""scope"">
                                    <el-button type=""primary"" size=""small"" class=""waves-effect mb5"" v-on:click=""chooseSku(scope.row)"">
                                        选择
                                    </el-button>
                                </template>
                            </el-table-column>
                        </el-table>
                    </el-col>
                    <el-col :span=""24"" class=""toolbar"">
                        <el-pagination v-on:size-change=""handleSizeChange"" v-on:current-change=""handleCurrentChange"" :current-page=""page"" :page-sizes=""[10,20,30,40,50]"" :page-size=""pageSize"" layout=""total, sizes, prev, pager, next, jumper"" :total=""total"" style=""float:right;"">
                        </el-pagination>
                    </el-col>
                </el-row>
            </el-dialog>
        </template>
    </el-card>
</");
            WriteLiteral(@"div>

<script>
    var main = {
        data() {
            return {
                activeName: 'first',
                orderInfo: {
                    //id: 0,
                    //orderNumber: void 0,
                    orderNumberString: ""订单号由系统生成"",
                    //orderDateString: void 0,
                    orderTotalString: void 0,
                    shipToCountry: ""US"",
                    billToCountry: ""US"",
                    //orderStatus: void 0,
                    //orderSource: void 0,
                    //customerId: void 0,
                    //orderTotal: void 0,
                    //amountPaid: void 0,
                    //taxAmount: void 0,
                    //shippingAmount: void 0,
                    //stockStatus: void 0,
                    //printStatus: void 0,
                    isAddressSame: true,
                    items: [

                    ]
                },
                orderLoading: false,
                formLoadin");
            WriteLiteral(@"g: false,
                stockListVisable: false,
                stockListLoading: false,
                itemListLoading: false,
                height_table: 650,
                skuStockList: [],
                warehouseList: [],
                filters: {
                    searchKey: void 0,
                    warehouseId: void 0,

                },
                pageSize: 10,
                page: 1,
                total: 0
            }
        },
        computed: {

        },
        watch: {
            //'orderInfo.items.qty': function (val, oldval) {
            //    alert(""qty"")
            //},
            //'orderInfo.items': function (val, oldval) {
            //    alert(""items"")
            //}
            //'orderInfo.items': {
            //    handler () {
            //        // 执行需要的操作...
            //        //alert(""abc"")
            //        this.orderInfo.orderTotalString = this.sumTotal();
            //    },
            //    deep: ");
            WriteLiteral(@"true // 该属性默认值为false.
            //}
        },

        methods: {
            qtyBlur() {
                //alert(""qtyBlur"");
                this.orderInfo.orderTotalString = this.sumTotal();
            },
            unitPriceBlur() {
                //alert(""qtyBlur"");
                this.orderInfo.orderTotalString = this.sumTotal();
            },
            sumTotal() {
                var total = 0;
                for (var i = 0; i < this.orderInfo.items.length; i++) {
                    var item = this.orderInfo.items[i];
                    if (isNaN(item.unitPriceString) || isNaN(item.qty)) {
                        continue;
                    }
                    total = total + parseFloat(item.unitPriceString) * parseInt(item.qty);
                }
                return total.toFixed(2);
            },
            save() {
                console.log(this.orderInfo);
                var _self = this;
                _self.formLoading = true;
                ");
            WriteLiteral(@"$.ajax({
                    type: 'post',
                    dataType: 'json',
                    contentType: 'application/json',
                    url: '../../rest/saleorder/manual/save',
                    data: JSON.stringify(this.orderInfo),
                    success: function (data) {
                        if (data.success == true) {
                            _self.$notify({
                                title: '成功',
                                message: '订单添加成功！',
                                type: 'success'
                            });
                        } else {
                            _self.$notify.error({
                                title: '错误',
                                message: data.msg
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        if (XMLHttpRequest.status == 401 || errorThrown == ""Unauthorized"") ");
            WriteLiteral(@"{
                            window.parent.MainIndex.openLoginFrom();
                            _self.$message({
                                type: 'error',
                                message: XMLHttpRequest.responseJSON.msg
                            });
                        } else {
                            _self.$message({
                                type: 'error',
                                message: errorThrown
                            });
                        }
                    },
                    complete() {
                        _self.stockListLoading = false;
                    }
                });
            },
            openSelectSku: function () {
                var _self = this;
                _self.getSkuStockList();
                _self.stockListVisable = true;
            },
            chooseSku(row) {
                var _self = this;
                var item = {};
                item.name = row.sku.fullEName;
     ");
            WriteLiteral(@"           item.factoryModel = row.sku.factoryModel;
                item.skuId = row.skuId;
                item.batchId = row.batchId;
                item.batchNo = row.batchNo;
                item.warehouseId = row.warehouseId;
                item.warehouseName = row.warehouse.name;
                _self.orderInfo.items.push(item);
                _self.stockListVisable = false;
            },
            del(index) {
                this.orderInfo.items.splice(index, 1);
            },
            search() {
                this.page = 1;
                this.getSkuStockList();
            },
            handleSizeChange(val) {
                this.pageSize = val;
                this.getSkuStockList();
            },
            //【点击第几页】
            handleCurrentChange(val) {
                this.page = val;
                this.getSkuStockList();
            },
            getSkuStockList() {
                var _self = this;
                _self.stockListLoading = true;");
            WriteLiteral(@"
                _self.skuStockList = [];
                var batchNo = '';
                $.ajax({
                    type: 'Get',
                    url: '../../rest/sku/stock/list',
                    data: { key: _self.filters.searchKey, warehouseId: _self.filters.warehouseId, pageSize: _self.pageSize, currentPage: _self.page },
                    success: function (data) {
                        if (data.success == true) {
                            _self.total = data.page.totalCount;
                            _self.skuStockList = data.data;
                        } else {
                            _self.$notify.error({
                                title: '错误',
                                message: data.msg
                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        if (XMLHttpRequest.status == 401 || errorThrown == ""Unauthorized"") {
           ");
            WriteLiteral(@"                 window.parent.MainIndex.openLoginFrom();
                            _self.$message({
                                type: 'error',
                                message: XMLHttpRequest.responseJSON.msg
                            });
                        } else {
                            _self.$message({
                                type: 'error',
                                message: errorThrown
                            });
                        }
                    },
                    complete() {
                        _self.stockListLoading = false;
                    }
                });
            },
            getWarehouseSimpleList: function (action) {
                var _self = this;
                $.ajax({
                    type: 'GET',
                    url: '/rest/warehouse/list/simple/get',
                    success: function (data) {
                        if (data.success == true) {
                            _self");
            WriteLiteral(@".warehouseList = data.data;
                            _self.warehouseList.unshift({
                                id: 0,
                                number: '请选择仓库'
                            });
                        } else {
                            _self.$notify.error({
                                title: '错误',
                                message: data.msg
                            });
                        }
                    },
                    complete() {
                        if (action)
                            action();
                    }
                });
            },


        },
        created() {

        }
    };
    var Ctor = Vue.extend(main)
    new Ctor().$mount('#userlist')
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
