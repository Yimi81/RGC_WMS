#pragma checksum "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Sku\SkuCostDetail.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2c930e72454286d571d640c96d9756165a581f6a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sku_SkuCostDetail), @"mvc.1.0.view", @"/Views/Sku/SkuCostDetail.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\_ViewImports.cshtml"
using RGC.WMS.USA.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2c930e72454286d571d640c96d9756165a581f6a", @"/Views/Sku/SkuCostDetail.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"804fc8bd0ed383ec8f2a14309e921cbb1975ce29", @"/Views/_ViewImports.cshtml")]
    public class Views_Sku_SkuCostDetail : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Sku\SkuCostDetail.cshtml"
  
    ViewBag.Title = "Add";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<link rel=""stylesheet"" href=""/lib/elFinder/lib/jquery-ui/themes/base/all.css"" />
<link rel=""stylesheet"" href=""/lib/elFinder/lib/elfinder/css/elfinder.full.css"" />
<link rel=""stylesheet"" href=""/lib/elFinder/lib/elfinder/css/theme.css"" />
<link rel=""stylesheet"" href=""/css/common.css"" />
<style>
    #nav {
        width: 100%;
        /*position: fixed;
        top: 100px;*/
        /*ie6下样式，加下划线表示只针对ie6 的hack */
        _position: absolute; /* 把导航栏位置定义为绝对位置  关键*/
        _top: expression(documentElement.scrollTop + ""px""); /* 把导航栏位置放在浏览器垂直滚动条的顶端  关键 */
        z-index: 100; /* 让导航栏浮在网页的高层位置，遇到flash和图片时候也能始终保持最外层 */
    }

    .pl90 {
        padding-left: 90px;
    }

    .el-step__title {
        font-size: 13px !important;
        line-height: 38px;
        cursor: pointer;
    }

    .w140 {
        width: 140px;
    }

    .w178 {
        width: 178px;
    }

    .w183 {
        width: 183px;
    }

    .w250 {
        width: 250px;
    }

    .w365 {
        width: ");
            WriteLiteral(@"365px;
    }

    .avatar {
        width: 200px;
        height: 200px;
        display: block;
    }

    .el-card {
        border: none;
    }

    .el-card__header {
        border-bottom: none;
        padding-left: 0;
    }

    .el-card__body {
        padding: 0;
    }

    .el-steps--simple {
        padding: 10px 6% !important;
    }

    .item_title {
        height: 35px;
        padding: 0 15px;
        margin-bottom: 20px;
        line-height: 35px;
        background-color: #E5E9F2;
        border-radius: 3px;
    }

        .item_title .el-button {
            margin-top: 4px;
        }

    .skuform .el-tabs__header {
        position: sticky;
        top: 0;
        background: white;
        z-index: 9;
        margin-top: 10px;
    }

    .savebtn {
        float: right;
        position: sticky;
        top: 4px;
        right: 10px;
        z-index: 10;
        margin-right: 10px;
    }

    .skuform .el-tabs__item {
        heigh");
            WriteLiteral(@"t: 44px;
        line-height: 44px;
    }

    .hide-empty .el-table__empty-block {
        display: none;
    }

    .detail-table > .el-table__body-wrapper > table > tbody > tr > td:not(:first-child), .detail-table > .el-table__body-wrapper > table > tbody > tr > td:not(:first-child) > .cell {
        padding: 0;
        border: none;
    }
    /*.el-input__inner{
        width:183px;
    }*/
    .maidian_scroll::-webkit-scrollbar { /*滚动条整体样式*/
        width: 6px !important;
        ; /*高宽分别对应横竖滚动条的尺寸*/
        height: 6px !important;
        ;
        background: #ffffff !important;
        ;
        cursor: pointer !important;
    }

    .maidian_scroll::-webkit-scrollbar-thumb { /*滚动条里面小方块*/
        border-radius: 5px !important;
        -webkit-box-shadow: inset 0 0 5px rgba(240, 240, 240, .5) !important;
        ;
        background: rgba(0, 0, 0, 0.8) !important;
        ;
        cursor: pointer !important;
    }

    .maidian_scroll::-webkit-scrollbar-track { /*滚动条里");
            WriteLiteral(@"面轨道*/
        -webkit-box-shadow: inset 0 0 5px rgba(240, 240, 240, .5) !important;
        ;
        border-radius: 0 !important;
        ;
        background: rgba(240, 240, 240, 0.5) !important;
        ;
        cursor: pointer !important;
    }

    .pici_checkbox:hover {
        border-color: #242424;
    }
</style>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2c930e72454286d571d640c96d9756165a581f6a6804", async() => {
                WriteLiteral(@"
    <div id=""wrapper"">
        <!-- 标题和地址 -->
        <el-row>
            <el-col :span=""24"" class=""breadcrumb-container"" style=""padding-left:20px;"">
                <el-breadcrumb separator=""/"">
                    <el-breadcrumb-item><strong>产品管理</strong></el-breadcrumb-item>
                    <el-breadcrumb-item>添加RGC在售产品</el-breadcrumb-item>
                </el-breadcrumb>
            </el-col>
        </el-row>
        <template>
            <article class=""administration-maintenance-container"" v-loading=""loading"">
                <div ref=""nav_sku"" id=""nav_sku"">

                    <el-form :inline=""true"" :model=""currSkuCost"" ref=""currSkuCost"" ");
                WriteLiteral(@" label-width=""300px"" class=""skuform"" label-position=""right"" size=""mini"">

                        <!-- 选择SKU -->

                        <el-card class=""box-card"" shadow=""hover"" :body-style=""{ padding: '0px' }"">
                            <div slot=""header"">
                                <span class=""step-jump pr ml20"">
                                    <i class=""tip-tit"">
                                        <i class=""pr z-in2 pl10"">产品信息</i>
                                    </i>
                                </span>
                            </div>
                            <el-row");
                BeginWriteAttribute("v-if", " v-if=\"", 4768, "\"", 4797, 2);
#nullable restore
#line 178 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Sku\SkuCostDetail.cshtml"
WriteAttributeValue("", 4775, ViewBag.productId, 4775, 18, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue(" ", 4793, "<=0", 4794, 4, true);
                EndWriteAttribute();
                WriteLiteral(@">
                                <el-form-item label=""Sku"" prop=""skuFactoryModel"" label-width=""315px"">

                                    <el-input v-model.trim=""currSkuCost.skuFactoryModel"" :disabled=""true"" style=""width:200px;"">
                                        <el-button v-if=""isChoose"" slot=""append"" type=""primary"" plain v-on:click=""openSelectSku"">
                                            选择Sku
                                            <i class=""el-icon-menu""></i>
                                        </el-button>
                                    </el-input>

                                </el-form-item>
                            </el-row>
                            <el-row v-if=""this.currProduct != null && this.currProduct.id == 0"">
                                <el-form-item label=""当前产品"" prop=""factoryModel"" label-width=""315px"">
                                    <el-input v-model.trim=""this.currProduct.factoryModel"" :disabled=""true"" style=""width:200px;"">
        ");
                WriteLiteral(@"                            </el-input>
                                </el-form-item>
                            </el-row>
                            <el-row v-if=""bulletPoint != undefined && bulletPoint.length >0"">
                                <el-form-item label=""卖点"" :disabled=""true"" prop=""bulletPoint"" label-width=""315px"">
");
                WriteLiteral(@"                                    <el-card style=""padding: 5px;"">
                                        <p style=""overflow-y:auto;height:150px;width:480px;line-height:24px;"" v-html=""bulletPoint"" class=""maidian_scroll""></p>
                                    </el-card>
                                </el-form-item>
                            </el-row>
                            <el-row>
                                <el-form-item label=""Remark (产品备注)"" label-width=""312px"">
                                    <el-input v-model=""currSkuCost.remark"" type=""textarea"" :rows=""4""
                                              placeholder=""Remark (产品备注)"" class=""w365"" />
                                </el-form-item>
                            </el-row>
                        </el-card>

                        <!-- 成本信息 -->

                        <el-card class=""box-card"" shadow=""hover"" style=""margin-top:20px;padding-right:20px;"" :body-style=""{ padding: '0px' }"">
                           ");
                WriteLiteral(@" <div slot=""header"">
                                <span class=""step-jump pr ml20"">
                                    <i class=""tip-tit"">
                                        <i class=""pr z-in2 pl10"">成本信息</i>
                                    </i>
                                </span>
                            </div>
                            <el-form-item label=""FOB"">
                                $ <el-input-number class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-model.trim=""currSkuCost.fobString""></el-input-number>
                            </el-form-item>
                            <el-form-item label=""DDP"">
                                $ <el-input-number class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-model.trim=""currSkuCost.ddpString""></el-input-number>
                            </el-form-item>
                            <el-form-item label=""海运费"">
                                $ <el-input-number ");
                WriteLiteral(@"class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-model.trim=""currSkuCost.seaFreightString""></el-input-number>
                            </el-form-item>
                            <el-form-item label=""卸柜费"">
                                $ <el-input-number class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-model.trim=""currSkuCost.unloadingChargeString""></el-input-number>
                            </el-form-item>
                            <el-form-item label=""ELC"" prop=""elcString"">
                                $ <el-input-number class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-model.trim=""currSkuCost.elcString""></el-input-number>
                            </el-form-item>
                            <el-form-item label=""Z3 Freight(Z3运费)"" prop=""z3FreightString"">
                                $ <el-input-number class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-mod");
                WriteLiteral(@"el.trim=""currSkuCost.z3FreightString""></el-input-number>
                            </el-form-item>
                            <el-form-item label=""Z5 Freight(Z5运费)"" prop=""z5FreightString"">
                                $ <el-input-number class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-model.trim=""currSkuCost.z5FreightString""></el-input-number>
                            </el-form-item>
                            <el-form-item label=""MSRP"" prop=""msrpString"">
                                $ <el-input-number class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-model.trim=""currSkuCost.msrpString""></el-input-number>
                            </el-form-item>
                            <el-form-item label=""MAP"" prop=""mapString"">
                                $ <el-input-number class=""minw250"" :controls=""false"" placeholder=""0.00"" :precision=""2"" :min=""0.00"" v-model.trim=""currSkuCost.mapString""></el-input-number>
                    ");
                WriteLiteral(@"        </el-form-item>

                        </el-card>

                        <!-- 添加批次 -->

                        <el-card class=""box-card"" shadow=""hover"" style=""margin-top:20px;margin-bottom:20px;"" :body-style=""{ padding: '0px' }"">
                            <div slot=""header"">
                                <span class=""step-jump pr ml20"">
                                    <i class=""tip-tit"">
                                        <i class=""pr z-in2 pl10"">批次列表</i>
                                    </i>
                                </span>
                            </div>
                            <el-row>
                                <el-form-item label="" "" prop=""isAddBatch"" label-width=""250px"">
                                    <el-checkbox v-model=""currSkuCost.isAddBatch"" label=""是否添加批次"" border size=""mini"" class=""pici_checkbox""></el-checkbox>
                                </el-form-item>
                            </el-row>
                            <div");
                WriteLiteral(@" v-if=""currSkuCost.isAddBatch == true"">
                                <el-row style=""padding-left:250px;"">
                                    <el-button size=""mini"" plain v-on:click=""addBatch()"">
                                        添加批次
                                        <i class=""el-icon-circle-plus""></i>
                                    </el-button>
                                </el-row>
                                <br />
                                <el-row style=""padding-left:250px"">
                                    <el-form size=""mini"" :inline=""true"" v-model=""BatchList"">
                                        <el-form-item v-for=""(item,index) in BatchList"" :key=""index"">
                                            <el-row :gutter=""12"">
                                                <el-col :span=""21"">
                                                    <el-col :span=""9"">
                                                        <el-input placeholder=""批次号"" width=""1");
                WriteLiteral(@"00px"" v-model.trim=""item.batchNo"" auto-complete=""off"" icon=""edit"">
                                                        </el-input>
                                                    </el-col>
                                                    <el-col :span=""6"">
");
                WriteLiteral("                                                        <el-select v-model=\"item.status\" width=\"100px\" placeholder=\"请选择状态\">\r\n");
                WriteLiteral(@"                                                            <el-option v-for=""item in statusList""
                                                                       :key=""item.value""
                                                                       :label=""item.label""
                                                                       :value=""item.value"">
                                                            </el-option>
                                                        </el-select>
                                                    </el-col>
                                                    <el-col :span=""9"">
                                                        <el-input placeholder=""备注"" v-model=""item.remark"" auto-complete=""off"" icon=""edit"">
                                                        </el-input>
                                                    </el-col>
                                                </el-col>

                                       ");
                WriteLiteral(@"         <el-col :span=""3"">
                                                    <el-button type=""danger"" icon=""el-icon-delete"" plain v-on:click=""BatchList.splice(index , 1)""></el-button>
                                                </el-col>
                                            </el-row>
                                        </el-form-item>
                                    </el-form>
                                </el-row>
                            </div>
                        </el-card>
                        <div style=""text-align:center;margin-bottom:20px;"">
                            <el-button type=""primary"" size=""medium"" v-on:click=""save()"" v-loading=""loading"">
                                保 存
                                <i class=""el-icon-check"" style=""margin-left:5px;""></i>
                            </el-button>
");
                WriteLiteral(@"                        </div>
                </div>
            </article>

            <!-- 选择Sku -->
            <el-dialog title=""选择Sku"" :visible.sync=""skuListVisable"" :close-on-click-modal=""false"" top=""5%"" width=""1200px"">
                <article class=""search"">
                    <section>
                        <el-input placeholder=""搜索"" v-model=""filters.searchKey""
                                  v-on:keyup.enter.native=""getSkuList()"" style=""width:250px"" clearable></el-input>

                        <el-button v-on:click=""search"" icon=""el-icon-search"">搜索</el-button>
                    </section>
                </article>
                <el-row>
                    <el-col>
                        <el-table class=""data-table"" v-loading=""skuListLoading"" :data=""skuList"" :fit=""true"" border style=""font-size:12px;"">
                            <el-table-column min-width=""50"" prop=""id"" label=""ID"">
                                <template slot-scope=""scope"">
                       ");
                WriteLiteral(@"             <i>{{scope.row.id}}</i>
                                </template>
                            </el-table-column>
                            <el-table-column min-width=""200"" prop=""fullEName"" label=""产品名"">
                            </el-table-column>
                            <el-table-column width=""120"" label=""图片"" align=""center"">
                                <template slot-scope=""scope1"">
                                    <img v-if=""scope1.row.primaryImageSrcFull"" class=""pimg"" alt=""no image"" :src=""scope1.row.primaryImageSrcFull"" height=""50"">
                                </template>
                            </el-table-column>
                            <el-table-column prop=""status"" label=""状态"" width=""110"">
                                <template slot-scope=""scope"">
                                    <el-tag size=""small"" v-if=""scope.row.status == 0"">录入中</el-tag>
                                    <el-tag size=""small"" v-if=""scope.row.status == 1"" type=""info"">待审核</el");
                WriteLiteral(@"-tag>
                                    <el-tag size=""small"" v-if=""scope.row.status == 2"" type=""danger"">审核不通过</el-tag>
                                    <el-tag size=""small"" v-if=""scope.row.status == 3"" type=""success"">正常</el-tag>
                                    <el-tag size=""small"" v-if=""scope.row.status == 7"" type=""info"">冻结</el-tag>
                                    <el-tag size=""small"" v-if=""scope.row.status == 8"" type=""info"">淘汰</el-tag>
                                    <el-tag size=""small"" v-if=""scope.row.status == 9"" type=""info"">异常</el-tag>
                                </template>
                            </el-table-column>
                            <el-table-column min-width=""80"" prop=""funcCategory.name"" label=""分类"">
                                <template slot-scope=""scope"">
                                    <i v-if=""scope.row.funcCategory!=null"">{{scope.row.funcCategory.eName}}</i>
                                </template>
                            </el-table-col");
                WriteLiteral(@"umn>

                            <el-table-column min-width=""100"" prop=""factoryModel"" label=""工厂型号"">
                                <template slot-scope=""scope"">
                                    <i>{{scope.row.factoryModel}}</i>
                                </template>
                            </el-table-column>

                            <el-table-column min-width=""100"" prop=""createTime"" label=""创建时间"">
                                <template slot-scope=""scope"">
                                    <i>{{scope.row.creationTimeString}}</i>
                                </template>
                            </el-table-column>
                            <el-table-column width=""100"" label=""操作"">
                                <template slot-scope=""scope"">
                                    <el-button type=""primary"" size=""small"" class=""waves-effect mb5"" v-on:click=""chooseSkuId(scope.row)"">
                                        选择
                                    </el-button>");
                WriteLiteral(@"
                                </template>
                            </el-table-column>
                        </el-table>
                    </el-col>
                    <el-col :span=""24"" class=""toolbar"">
                        <el-pagination v-on:size-change=""handleSizeChange"" v-on:current-change=""handleCurrentChange"" :current-page=""page"" :page-sizes=""[10,20,30,40,50]"" :page-size=""pageSize"" layout=""total, sizes, prev, pager, next, jumper"" :total=""total"" style=""float:right;"">
                        </el-pagination>
                    </el-col>
                </el-row>
            </el-dialog>
        </template>
    </div>

    <script type=""text/javascript"" src=""/lib/ckeditor/ckeditor.js""></script>
    <script>
        var Main = {
            data() {
                return {
                    loading: false,
                    listLoading: false,
                    skuId: 0,
                    isChoose: true,
                    currSkuCost: {
                      ");
                WriteLiteral(@"  id: 0,
                        skuCostId: 0,
                        skuId: 0,
                        productId: 0,
                        sku: void 0,
                        ddpString: '',
                        fobString: '',
                        seaFreightString: '',
                        unloadingChargeString: '',
                        elcString: '',
                        z3FreightString: '',
                        z5FreightString: '',
                        msrpString: '',
                        mapString: '',
                        remark: void 0,
                        skuFactoryModel: void 0,
                        skuCostBatchList: [],
                        isAddBatch: false,

                    },
                    currProduct: {

                    },
                    statusList: [
                        { label: '在制', value: 0 },
                        { label: '在途', value: 1 },
                        { label: '已到货', value: 2 },
         ");
                WriteLiteral(@"               { label: '在售', value: 3 },
                        { label: '售罄', value: 4 },
                    ],
                    //rules: {
                    //    elcString: [
                    //        { required: true, message: '请输入ELC', trigger: 'change' },
                    //        { type: 'number', message: 'ELC必须为数字值'}
                    //    ],
                    //    z3FreightString: [
                    //        { required: true, message: '请输入Z3运费', trigger: 'change' },
                    //         { type: 'number', message: 'Z3运费必须为数字值'}
                    //    ],
                    //    z5FreightString: [
                    //        { required: true, message: '请输入Z5运费', trigger: 'change' },
                    //         { type: 'number', message: 'Z5运费必须为数字值'}
                    //    ],
                    //    msrpString: [
                    //        { required: true, message: '请输入MSRP', trigger: 'change' },
                    //         { t");
                WriteLiteral(@"ype: 'number', message: 'MSRP必须为数字值'}
                    //    ],
                    //    mapString: [
                    //        { required: true, message: '请输入MAP', trigger: 'change' },
                    //         { type: 'number', message: 'MAP必须为数字值'}
                    //    ],

                    //},
                    skuList: [],
                    skuListVisable: false,
                    skuListLoading: false,
                    filters: {
                        searchKey: """",
                        isChanged: 0,
                        type: void 0,
                        status: void 0
                    },
                    total: 0,
                    page: 1,
                    pageSize: 10,
                    BatchList: [],
                    bulletPoint: void 0,
                }
            },
            created() {

            },
            methods: {
                addBatch() {
                    this.BatchList.push(
            ");
                WriteLiteral(@"            {
                            id: 0,
                            batchNo: '',
                            status: void 0,
                            remark: void 0,
                        }
                    )
                },
                chooseSkuId(sku) {
                    this.currSkuCost.sku = sku;
                    this.currSkuCost.skuId = sku.id;
                    this.currSkuCost.productId = sku.productId;
                    this.currSkuCost.skuFactoryModel = sku.factoryModel;
                    this.bulletPoint = sku.bulletPoint;
                    console.log(this.currSkuCost)
                    this.skuListVisable = false;
                },
                openSelectSku: function () {
                    var _self = this;
                    _self.getSkuList();
                    _self.skuListVisable = true;
                },
                search() {
                    this.page = 1;
                    this.getSkuList();
               ");
                WriteLiteral(@" },
                getSkuList() {
                    var _self = this;
                    _self.skuListLoading = true;
                    var categoryID = 0;
                    $.ajax({
                        type: 'Get',
                        url: '../../rest/sku/list',
                        data: { key: _self.filters.searchKey, categoryId: categoryID, pageSize: _self.pageSize, currentPage: _self.page },
                        success: function (data) {
                            if (data.success == true) {
                                _self.total = data.page.totalCount;
                                _self.skuList = data.data;
                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textSta");
                WriteLiteral(@"tus, errorThrown) {
                            if (XMLHttpRequest.status == 401 || errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        },
                        complete(){
                            _self.skuListLoading = false;
                        }
                    });
                },
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getSkuList();
                },
         ");
                WriteLiteral(@"       //【点击第几页】
                handleCurrentChange(val) {
                    this.page = val;
                    this.getSkuList();
                },
                //【点击第几页】
                handleCurrentChange1(val) {
                    this.page = val;
                    this.getSkuList();
                },
                save() {
                    var _valid = false;
                    var _self = this;
                    _self.currSkuCost.skuCostBatchList = [];
                    if (_self.currSkuCost.isAddBatch) {
                        for (var i = 0; i < _self.BatchList.length; i++) {
                            if (_self.BatchList[i].batchNo == """" || _self.BatchList[i].batchNo == undefined || _self.BatchList[i].batchNo == null) {
                                //_self.BatchList.splice(i, 1);
                                //_self.$message({
                                //    type: 'error',
                                //    message: '批次号不能为空'
              ");
                WriteLiteral(@"                  //});
                                //return false;
                            }
                            else {
                                _self.currSkuCost.skuCostBatchList.push(_self.BatchList[i]);
                            }
                        }

                    }
                    //console.log(_self.currSkuCost)
                    //return;
                    this.$refs['currSkuCost'].validate((valid) => {
                        if (valid) {
                            _valid = true;

                        }
                    });
                    console.log(_valid)
                    if (_valid) {
                        //return false;

                        _self.loading = true

                        try {
                            _self.currSkuCost.ddpString = _self.currSkuCost.ddpString.toString();
                            _self.currSkuCost.fobString = _self.currSkuCost.fobString.toString();
                    ");
                WriteLiteral(@"        _self.currSkuCost.seaFreightString = _self.currSkuCost.seaFreightString.toString();
                            _self.currSkuCost.unloadingChargeString = _self.currSkuCost.unloadingChargeString.toString();
                            _self.currSkuCost.elcString = _self.currSkuCost.elcString.toString();
                            _self.currSkuCost.z3FreightString = _self.currSkuCost.z3FreightString.toString();
                            _self.currSkuCost.z5FreightString = _self.currSkuCost.z5FreightString.toString();
                            _self.currSkuCost.msrpString = _self.currSkuCost.msrpString.toString();
                            _self.currSkuCost.mapString = _self.currSkuCost.mapString.toString();

                            $.ajax({
                                type: 'POST',
                                contentType: 'application/json',
                                url: '../../rest/sku/cost/create',
                                data: JSON.stringify(_self.currSku");
                WriteLiteral(@"Cost),
                                success: function (data) {
                                    if (data.success == true) {
                                        _self.$notify({
                                            title: '成功',
                                            message: '添加成功！',
                                            type: 'success'
                                        });
                                        _self.clear();
                                        //_self.fetchData();
                                    }
                                    else {
                                        _self.$notify.error({
                                            title: '错误',
                                            message: data.msg
                                        });
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
         ");
                WriteLiteral(@"                           if (errorThrown == ""Unauthorized"") {
                                        window.parent.MainIndex.openLoginFrom();
                                        _self.$message({
                                            type: 'error',
                                            message: XMLHttpRequest.responseJSON.msg
                                        });
                                    } else {
                                        _self.$message({
                                            type: 'error',
                                            message: errorThrown
                                        });
                                    }
                                },
                                complete(){
                                    _self.loading = false;
                                }
                            });
                        }
                        catch (e) {
                            _self.loading");
                WriteLiteral(@" = false;
                            _self.$message({
                                type: 'error',
                                message: e
                            });
                        }

                    }
                },
                save1() {

                },
                clear() {
                    var _self = this;
                    //清空缓存
                    _self.currSkuCost = {
                        id: 0,
                        skuCostId: 0,
                        skuId: 0,
                        productId: 0,
                        sku: void 0,
                        ddpString: 0,
                        fobString: 0,
                        seaFreightString: 0,
                        unloadingChargeString: 0,
                        elcString: 0,
                        z3FreightString: 0,
                        z5FreightString: 0,
                        msrpString: 0,
                        mapString: 0,
                  ");
                WriteLiteral(@"      remark: void 0,
                    };
                    _self.bulletPoint = void 0;
                    _self.currProduct = {};

                },
                getSku() {
                    var _self = this;
                    $.ajax({
                        type: 'GET',
                        url: '../../rest/sku/get',
                        data: { id: _self.skuId },
                        success: function (data) {
                            if (data.success == true) {
                                _self.currSkuCost.sku = data.data;
                                _self.currSkuCost.skuId = _self.skuId;
                                _self.currSkuCost.skuFactoryModel = data.data.factoryModel;
                                _self.bulletPoint = data.data.bulletPoint;
                                _self.currSkuCost.productId = data.data.productId;

                            } else {
                                _self.$notify.error({
                         ");
                WriteLiteral(@"           title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (errorThrown == ""Unauthorized"") {
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                },
                inheriteProduct() {
                    var _self =");
                WriteLiteral(" this;\r\n                    var productId = ");
#nullable restore
#line 721 "D:\SVN\RGC\RGC.WMS\trunk\RGC.WMS.USA\RGC.WMS.USA\Views\Sku\SkuCostDetail.cshtml"
                               Write(ViewBag.productId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
                    $.ajax({
                        type: 'Get',
                        url: '../../rest/product/get',
                        data: { id: productId },
                        success: function (data) {
                            if (data.success == true) {
                                _self.currProduct = data.data;
                                _self.currProduct.id = 0;
                                console.log(_self.currProduct);
                                _self.currSkuCost.productId = productId;

                            } else {
                                _self.$notify.error({
                                    title: '错误',
                                    message: data.msg
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            if (XMLHttpRequest.status == 401 || errorThrown == ""Unauthorized"") ");
                WriteLiteral(@"{
                                window.parent.MainIndex.openLoginFrom();
                                _self.$message({
                                    type: 'error',
                                    message: XMLHttpRequest.responseJSON.msg
                                });
                            } else {
                                _self.$message({
                                    type: 'error',
                                    message: errorThrown
                                });
                            }
                        }
                    });
                }

            },
            components: {

            },
            mounted() {
                this.skuId = getQueryString(""skuId"");
                this.productId = getQueryString(""productId"");
                //alert(this.skuId)
                //有skuId是列表创建跳转
                if (this.skuId > 0) {
                    this.getSku();
                    this.isChoose = false;");
                WriteLiteral(@"
                }
                if (this.productId > 0) {
                    this.inheriteProduct();
                }
            }
        }
        var Ctor = Vue.extend(Main);
        new Ctor().$mount('#wrapper');

        function getQueryString(name) {
            var reg = new RegExp(""(^|&)"" + name + ""=([^&]*)(&|$)"", ""i"");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return unescape(r[2]); return null;
        }
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
